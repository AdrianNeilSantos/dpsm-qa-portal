{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport jwt from 'jsonwebtoken';\nexport default function updateFaculty(_x) {\n  return _updateFaculty.apply(this, arguments);\n}\n\nfunction _updateFaculty() {\n  _updateFaculty = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n    var url, res, access, token, facultyId, json, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            url = 'http://localhost:3001/api/';\n            _context.next = 4;\n            return fetch(url + 'login', {\n              body: JSON.stringify({\n                \"upemail\": \"jpcristobal1@upm.edu.ph\",\n                \"password\": \"password\"\n              }),\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              method: 'POST'\n            });\n\n          case 4:\n            res = _context.sent;\n            _context.next = 7;\n            return res.json();\n\n          case 7:\n            access = _context.sent;\n            token = access.result.token;\n            facultyId = 0;\n\n            if (!token) {\n              _context.next = 32;\n              break;\n            }\n\n            json = jwt.decode(token);\n            facultyId = json.facultyId;\n            _context.prev = 13;\n            _context.next = 16;\n            return axios.put(\"https://sp-api-test.alun.app/api/faculty/basic-info/9/personal\", {\n              lastName: \"\".concat(data.lastName),\n              middleName: \"\".concat(data.middleName),\n              permanentAddress: \"\".concat(data.permanentAddress),\n              presentAddress: \"\".concat(data.presentAddress),\n              mobile: \"\".concat(data.mobile),\n              landline: \"\".concat(data.landline),\n              email: \"\".concat(data.email),\n              civilStatus: \"\".concat(data.civilStatus),\n              religion: \"\".concat(data.religion),\n              emergencyContactPerson: \"\".concat(data.emergencyContactPerson),\n              emergencyContactNumber: \"\".concat(data.emergencyContactNumber)\n            }, {\n              headers: {\n                Authorization: \"Bearer \".concat(token)\n              }\n            });\n\n          case 16:\n            response = _context.sent;\n\n            if (!response.data.success) {\n              _context.next = 22;\n              break;\n            }\n\n            console.log(response.data);\n            return _context.abrupt(\"return\", response.data);\n\n          case 22:\n            console.error(response.message);\n            return _context.abrupt(\"return\", response.data);\n\n          case 24:\n            _context.next = 30;\n            break;\n\n          case 26:\n            _context.prev = 26;\n            _context.t0 = _context[\"catch\"](13);\n            console.error(_context.t0);\n            return _context.abrupt(\"return\", _context.t0);\n\n          case 30:\n            _context.next = 33;\n            break;\n\n          case 32:\n            console.log(access.result.message);\n\n          case 33:\n            _context.next = 39;\n            break;\n\n          case 35:\n            _context.prev = 35;\n            _context.t1 = _context[\"catch\"](0);\n            console.error(_context.t1);\n            return _context.abrupt(\"return\", _context.t1);\n\n          case 39:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 35], [13, 26]]);\n  }));\n  return _updateFaculty.apply(this, arguments);\n}","map":{"version":3,"sources":["C:/Users/Aji Maglanque/Desktop/dpsm-qa-portal/services/faculty/basic-info/updateFaculty.js"],"names":["axios","jwt","updateFaculty","data","url","fetch","body","JSON","stringify","headers","method","res","json","access","token","result","facultyId","decode","put","lastName","middleName","permanentAddress","presentAddress","mobile","landline","email","civilStatus","religion","emergencyContactPerson","emergencyContactNumber","Authorization","response","success","console","log","error","message"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AAEA,wBAA8BC,aAA9B;AAAA;AAAA;;;4EAAe,iBAA6BC,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAETC,YAAAA,GAFS,GAEH,4BAFG;AAAA;AAAA,mBAGQC,KAAK,CAACD,GAAG,GAAG,OAAP,EACvB;AACIE,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAC,2BAAW,yBAAZ;AAAuC,4BAAY;AAAnD,eAAf,CADV;AAEIC,cAAAA,OAAO,EAAE;AACL,gCAAgB;AADX,eAFb;AAKIC,cAAAA,MAAM,EAAE;AALZ,aADuB,CAHb;;AAAA;AAGJC,YAAAA,GAHI;AAAA;AAAA,mBAYWA,GAAG,CAACC,IAAJ,EAZX;;AAAA;AAYJC,YAAAA,MAZI;AAaNC,YAAAA,KAbM,GAaED,MAAM,CAACE,MAAP,CAAcD,KAbhB;AAcNE,YAAAA,SAdM,GAcM,CAdN;;AAAA,iBAeNF,KAfM;AAAA;AAAA;AAAA;;AAgBAF,YAAAA,IAhBA,GAgBOX,GAAG,CAACgB,MAAJ,CAAWH,KAAX,CAhBP;AAiBNE,YAAAA,SAAS,GAAGJ,IAAI,CAACI,SAAjB;AAjBM;AAAA;AAAA,mBAmBYhB,KAAK,CAACkB,GAAN,CAAU,gEAAV,EAA4E;AAClGC,cAAAA,QAAQ,YAAKhB,IAAI,CAACgB,QAAV,CAD0F;AAElGC,cAAAA,UAAU,YAAKjB,IAAI,CAACiB,UAAV,CAFwF;AAGlGC,cAAAA,gBAAgB,YAAKlB,IAAI,CAACkB,gBAAV,CAHkF;AAIlGC,cAAAA,cAAc,YAAKnB,IAAI,CAACmB,cAAV,CAJoF;AAKlGC,cAAAA,MAAM,YAAKpB,IAAI,CAACoB,MAAV,CAL4F;AAMlGC,cAAAA,QAAQ,YAAKrB,IAAI,CAACqB,QAAV,CAN0F;AAOlGC,cAAAA,KAAK,YAAKtB,IAAI,CAACsB,KAAV,CAP6F;AAQlGC,cAAAA,WAAW,YAAKvB,IAAI,CAACuB,WAAV,CARuF;AASlGC,cAAAA,QAAQ,YAAKxB,IAAI,CAACwB,QAAV,CAT0F;AAUlGC,cAAAA,sBAAsB,YAAKzB,IAAI,CAACyB,sBAAV,CAV4E;AAWhGC,cAAAA,sBAAsB,YAAK1B,IAAI,CAAC0B,sBAAV;AAX0E,aAA5E,EAYpB;AACFpB,cAAAA,OAAO,EAAE;AACRqB,gBAAAA,aAAa,mBAAYhB,KAAZ;AADL;AADP,aAZoB,CAnBZ;;AAAA;AAmBLiB,YAAAA,QAnBK;;AAAA,iBAoCPA,QAAQ,CAAC5B,IAAT,CAAc6B,OApCP;AAAA;AAAA;AAAA;;AAqCVC,YAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAAC5B,IAArB;AArCU,6CAsCH4B,QAAQ,CAAC5B,IAtCN;;AAAA;AAwCV8B,YAAAA,OAAO,CAACE,KAAR,CAAcJ,QAAQ,CAACK,OAAvB;AAxCU,6CAyCHL,QAAQ,CAAC5B,IAzCN;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA4CX8B,YAAAA,OAAO,CAACE,KAAR;AA5CW;;AAAA;AAAA;AAAA;;AAAA;AAgDNF,YAAAA,OAAO,CAACC,GAAR,CAAYrB,MAAM,CAACE,MAAP,CAAcqB,OAA1B;;AAhDM;AAAA;AAAA;;AAAA;AAAA;AAAA;AAmDbH,YAAAA,OAAO,CAACE,KAAR;AAnDa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import axios from \"axios\"\r\nimport jwt from 'jsonwebtoken'\r\n\r\nexport default async function updateFaculty(data) {\r\n\ttry {\r\n\t\tlet url = 'http://localhost:3001/api/'\r\n\t    const res = await fetch(url + 'login',\r\n\t    {\r\n\t        body: JSON.stringify({\"upemail\": \"jpcristobal1@upm.edu.ph\", \"password\": \"password\"}),\r\n\t        headers: {\r\n\t            'Content-Type': 'application/json'\r\n\t        },\r\n\t        method: 'POST'\r\n\t    })\r\n\t    \r\n\t    const access = await res.json()\r\n\t    let token = access.result.token\r\n\t    let facultyId = 0;\r\n\t    if (token) {\r\n\t        const json = jwt.decode(token)\r\n\t        facultyId = json.facultyId\r\n\t        try {\r\n\t\t\t\tconst response = await axios.put(\"https://sp-api-test.alun.app/api/faculty/basic-info/9/personal\", {\r\n\t\t\t\t\tlastName: `${data.lastName}`,\r\n\t\t\t\t\tmiddleName: `${data.middleName}`,\r\n\t\t\t\t\tpermanentAddress: `${data.permanentAddress}`,\r\n\t\t\t\t\tpresentAddress: `${data.presentAddress}`,\r\n\t\t\t\t\tmobile: `${data.mobile}`,\r\n\t\t\t\t\tlandline: `${data.landline}`,\r\n\t\t\t\t\temail: `${data.email}`,\r\n\t\t\t\t\tcivilStatus: `${data.civilStatus}`,\r\n\t\t\t\t\treligion: `${data.religion}`,\r\n\t\t\t\t\temergencyContactPerson: `${data.emergencyContactPerson}`,\r\n\t  \t\t\t\temergencyContactNumber: `${data.emergencyContactNumber}`\r\n\t\t\t\t}, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tif (response.data.success) {\r\n\t\t\t\t\tconsole.log(response.data)\r\n\t\t\t\t\treturn response.data\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(response.message)\r\n\t\t\t\t\treturn response.data\r\n\t\t\t\t}\t\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(err)\r\n\t\t\t\treturn err\r\n\t\t\t}\r\n\t    } else {\r\n\t        console.log(access.result.message)\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.error(err)\r\n\t\treturn err\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}