{"ast":null,"code":"import axios from \"axios\";\nimport jwt from 'jsonwebtoken';\nexport default async function addPublication(data) {\n  let token = document.cookie;\n  let cookieData = jwt.decode(token);\n  let facultyId = cookieData.facultyId;\n  console.log(facultyId);\n\n  try {\n    if (token) {\n      console.log(data);\n\n      try {\n        const response = await axios.post(\"http://localhost:3001/api/faculty/accomplishment/add/training-seminar\", {\n          facultyId: facultyId,\n          title: `${data.title}`,\n          role: `${data.role}`,\n          dateFrom: `${data.dateFrom}`,\n          dateTo: `${data.dateTo}`,\n          venue: `${data.venue}`,\n          proof: `${data.proof}`\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        if (response.data.success) {\n          console.log(response.data);\n          return response.data;\n        } else {\n          console.error(response.message);\n          return response.data;\n        }\n      } catch (err) {\n        console.error(err);\n        return err;\n      }\n    }\n  } catch (err) {\n    console.error(err);\n    return err;\n  }\n}","map":{"version":3,"sources":["C:/Users/Aji Maglanque/Desktop/dpsm-qa-portal/services/faculty/accomplishments/addTraining.js"],"names":["axios","jwt","addPublication","data","token","document","cookie","cookieData","decode","facultyId","console","log","response","post","title","role","dateFrom","dateTo","venue","proof","headers","Authorization","success","error","message","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AAEA,eAAe,eAAeC,cAAf,CAA8BC,IAA9B,EAAoC;AAClD,MAAIC,KAAK,GAAGC,QAAQ,CAACC,MAArB;AACA,MAAIC,UAAU,GAAGN,GAAG,CAACO,MAAJ,CAAWJ,KAAX,CAAjB;AACG,MAAIK,SAAS,GAAGF,UAAU,CAACE,SAA3B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;;AACH,MAAI;AACH,QAAGL,KAAH,EAAU;AACTM,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;;AACA,UAAI;AACH,cAAMS,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAN,CAAW,uEAAX,EAAoF;AAC1GJ,UAAAA,SAAS,EAAEA,SAD+F;AAE1GK,UAAAA,KAAK,EAAG,GAAEX,IAAI,CAACW,KAAM,EAFqF;AAGjGC,UAAAA,IAAI,EAAG,GAAEZ,IAAI,CAACY,IAAK,EAH8E;AAIjGC,UAAAA,QAAQ,EAAG,GAAEb,IAAI,CAACa,QAAS,EAJsE;AAKjGC,UAAAA,MAAM,EAAG,GAAEd,IAAI,CAACc,MAAO,EAL0E;AAMjGC,UAAAA,KAAK,EAAG,GAAEf,IAAI,CAACe,KAAM,EAN4E;AAOjGC,UAAAA,KAAK,EAAG,GAAEhB,IAAI,CAACgB,KAAM;AAP4E,SAApF,EAQpB;AACFC,UAAAA,OAAO,EAAE;AACRC,YAAAA,aAAa,EAAG,UAASjB,KAAM;AADvB;AADP,SARoB,CAAvB;;AAaA,YAAIQ,QAAQ,CAACT,IAAT,CAAcmB,OAAlB,EAA2B;AAC1BZ,UAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACT,IAArB;AACA,iBAAOS,QAAQ,CAACT,IAAhB;AACA,SAHD,MAGO;AACNO,UAAAA,OAAO,CAACa,KAAR,CAAcX,QAAQ,CAACY,OAAvB;AACA,iBAAOZ,QAAQ,CAACT,IAAhB;AACA;AACD,OArBD,CAqBE,OAAOsB,GAAP,EAAY;AACbf,QAAAA,OAAO,CAACa,KAAR,CAAcE,GAAd;AACA,eAAOA,GAAP;AACA;AACD;AACD,GA7BD,CA6BE,OAAOA,GAAP,EAAY;AACbf,IAAAA,OAAO,CAACa,KAAR,CAAcE,GAAd;AACA,WAAOA,GAAP;AACA;AACD","sourcesContent":["import axios from \"axios\"\r\nimport jwt from 'jsonwebtoken'\r\n\r\nexport default async function addPublication(data) {\r\n\tlet token = document.cookie\r\n\tlet cookieData = jwt.decode(token)\r\n    let facultyId = cookieData.facultyId\r\n    console.log(facultyId)\r\n\ttry {\r\n\t\tif(token) {\r\n\t\t\tconsole.log(data)\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axios.post(\"http://localhost:3001/api/faculty/accomplishment/add/training-seminar\", {\r\n\t\t\t\t\tfacultyId: facultyId,\r\n\t\t\t\t\ttitle: `${data.title}`,\r\n\t\t            role: `${data.role}`,\r\n\t\t            dateFrom: `${data.dateFrom}`,\r\n\t\t            dateTo: `${data.dateTo}`,\r\n\t\t            venue: `${data.venue}`,\r\n\t\t            proof: `${data.proof}`\r\n\t\t\t\t}, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tif (response.data.success) {\r\n\t\t\t\t\tconsole.log(response.data)\r\n\t\t\t\t\treturn response.data\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(response.message)\r\n\t\t\t\t\treturn response.data\r\n\t\t\t\t}\t\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(err)\r\n\t\t\t\treturn err\r\n\t\t\t}\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.error(err)\r\n\t\treturn err\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}