{"ast":null,"code":"import axios from \"axios\";\nimport jwt from 'jsonwebtoken';\nexport default async function updateTraining(formData, token) {\n  let cookieData = jwt.decode(token);\n  let facultyId = cookieData.facultyId;\n\n  try {\n    if (token) {\n      let url = 'http://localhost:3001/api/faculty/accomplishment/' + facultyId;\n      let header = {\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      };\n\n      if (formData.get('proof') == \"\") {\n        formData.delete('proof');\n      }\n\n      for (var value of formData.values()) {\n        console.log(value);\n      }\n\n      const response = await axios({\n        method: 'PUT',\n        url: url + '/training-seminar',\n        data: formData,\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${token}`\n        }\n      }).then(function (response) {\n        //handle success\n        console.log(response);\n      }).catch(function (response) {\n        //handle error\n        console.log(response);\n      });\n    } else {\n      console.log(access.result.message);\n    }\n  } catch (err) {\n    console.error(err);\n    return err;\n  }\n}","map":{"version":3,"sources":["C:/Users/Aji Maglanque/Desktop/dpsm-qa-portal/services/faculty/accomplishments/updateTraining.js"],"names":["axios","jwt","updateTraining","formData","token","cookieData","decode","facultyId","url","header","headers","get","delete","value","values","console","log","response","method","data","Authorization","then","catch","access","result","message","err","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AAEA,eAAe,eAAeC,cAAf,CAA8BC,QAA9B,EAAwCC,KAAxC,EAA+C;AAC7D,MAAIC,UAAU,GAAGJ,GAAG,CAACK,MAAJ,CAAWF,KAAX,CAAjB;AACG,MAAIG,SAAS,GAAGF,UAAU,CAACE,SAA3B;;AACH,MAAI;AACA,QAAIH,KAAJ,EAAW;AACP,UAAII,GAAG,GAAG,sDAAsDD,SAAhE;AACH,UAAIE,MAAM,GAAG;AACTC,QAAAA,OAAO,EAAE;AACL,2BAAiB,YAAYN;AADxB;AADA,OAAb;;AAKA,UAAGD,QAAQ,CAACQ,GAAT,CAAa,OAAb,KAAyB,EAA5B,EAAgC;AAClCR,QAAAA,QAAQ,CAACS,MAAT,CAAgB,OAAhB;AACA;;AACE,WAAK,IAAIC,KAAT,IAAkBV,QAAQ,CAACW,MAAT,EAAlB,EAAqC;AAC3BC,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACH;;AACP,YAAMI,QAAQ,GAAG,MAAMjB,KAAK,CAAC;AAC5BkB,QAAAA,MAAM,EAAE,KADoB;AAE5BV,QAAAA,GAAG,EAAEA,GAAG,GAAG,mBAFiB;AAG5BW,QAAAA,IAAI,EAAEhB,QAHsB;AAI5BO,QAAAA,OAAO,EAAE;AAAC,0BAAgB,qBAAjB;AAAwCU,UAAAA,aAAa,EAAG,UAAShB,KAAM;AAAvE;AAJmB,OAAD,CAAL,CAMtBiB,IANsB,CAMjB,UAAUJ,QAAV,EAAoB;AACtB;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACH,OATsB,EAUtBK,KAVsB,CAUhB,UAAUL,QAAV,EAAoB;AACvB;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACH,OAbsB,CAAvB;AAcA,KA3BD,MA2BO;AACHF,MAAAA,OAAO,CAACC,GAAR,CAAYO,MAAM,CAACC,MAAP,CAAcC,OAA1B;AACN;AACD,GA/BD,CA+BE,OAAOC,GAAP,EAAY;AACbX,IAAAA,OAAO,CAACY,KAAR,CAAcD,GAAd;AACA,WAAOA,GAAP;AACA;AACD","sourcesContent":["import axios from \"axios\"\r\nimport jwt from 'jsonwebtoken'\r\n\r\nexport default async function updateTraining(formData, token) {\r\n\tlet cookieData = jwt.decode(token)\r\n    let facultyId = cookieData.facultyId\r\n\ttry {\r\n\t    if (token) {\r\n\t        let url = 'http://localhost:3001/api/faculty/accomplishment/' + facultyId;\r\n\t\t    let header = {\r\n\t\t        headers: {\r\n\t\t            'Authorization': 'Bearer ' + token\r\n\t\t        }\r\n\t\t    }\r\n\t\t    if(formData.get('proof') == \"\") {\r\n\t\t\t\tformData.delete('proof')\r\n\t\t\t}\r\n\t\t    for (var value of formData.values()) {\r\n                console.log(value)\r\n            }\r\n\t\t    const response = await axios({\r\n\t\t\t    method: 'PUT',\r\n\t\t\t    url: url + '/training-seminar',\r\n\t\t\t    data: formData,\r\n\t\t\t    headers: {'Content-Type': 'multipart/form-data', Authorization: `Bearer ${token}`}\r\n\t\t    })\t\r\n\t\t    .then(function (response) {\r\n\t\t        //handle success\r\n\t\t        console.log(response);\r\n\t\t    })\r\n\t\t    .catch(function (response) {\r\n\t\t        //handle error\r\n\t\t        console.log(response);\r\n\t\t    });\r\n\t    } else {\r\n\t        console.log(access.result.message)\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.error(err)\r\n\t\treturn err\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}