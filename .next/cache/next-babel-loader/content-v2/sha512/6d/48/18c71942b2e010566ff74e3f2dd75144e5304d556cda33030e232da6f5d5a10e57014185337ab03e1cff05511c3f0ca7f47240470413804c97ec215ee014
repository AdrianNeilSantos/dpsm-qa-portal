{"ast":null,"code":"import axios from \"axios\";\nimport jwt from 'jsonwebtoken';\nexport default async function addPublication(formData, token) {\n  let cookieData = jwt.decode(token);\n  let facultyId = cookieData.facultyId;\n\n  try {\n    if (token) {\n      try {\n        for (var value of formData.values()) {\n          console.log(value);\n        }\n\n        let proof = formData.get('proof');\n        formData.delete('proof');\n        const response = await axios({\n          method: 'POST',\n          url: 'http://localhost:3001/api/faculty/accomplishment/add/publication',\n          data: JSON.stringify(formData),\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n          }\n        }).then(async function (response) {\n          //handle success\n          console.log(response);\n          let bod = {\n            \"facultyId\": facultyId,\n            \"publicationId\": response.data.result.publicationId,\n            \"proof\": proof\n          };\n          console.log(bod);\n          const res = await axios({\n            method: 'POST',\n            url: 'http://localhost:3001/api/faculty/accomplishment/add/publisher',\n            data: bod,\n            headers: {\n              'Content-Type': 'multipart/form-data',\n              Authorization: `Bearer ${token}`\n            }\n          }).then(function (res) {\n            //handle success\n            console.log(res);\n          }).catch(function (res) {\n            //handle error\n            console.log(res);\n          });\n          return res.data;\n        }).catch(function (response) {\n          //handle error\n          console.log(response);\n        });\n      } catch (err) {\n        console.error(err);\n        return err;\n      }\n    }\n  } catch (err) {\n    console.error(err);\n    return err;\n  }\n}","map":{"version":3,"sources":["C:/Users/Aji Maglanque/Desktop/dpsm-qa-portal/services/faculty/accomplishments/addPublication.js"],"names":["axios","jwt","addPublication","formData","token","cookieData","decode","facultyId","value","values","console","log","proof","get","delete","response","method","url","data","JSON","stringify","headers","Authorization","then","bod","result","publicationId","res","catch","err","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AAEA,eAAe,eAAeC,cAAf,CAA8BC,QAA9B,EAAwCC,KAAxC,EAA+C;AAC7D,MAAIC,UAAU,GAAGJ,GAAG,CAACK,MAAJ,CAAWF,KAAX,CAAjB;AACG,MAAIG,SAAS,GAAGF,UAAU,CAACE,SAA3B;;AACH,MAAI;AACH,QAAIH,KAAJ,EAAW;AACV,UAAI;AACH,aAAK,IAAII,KAAT,IAAkBL,QAAQ,CAACM,MAAT,EAAlB,EAAqC;AACrBC,UAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACH;;AACD,YAAII,KAAK,GAAGT,QAAQ,CAACU,GAAT,CAAa,OAAb,CAAZ;AACAV,QAAAA,QAAQ,CAACW,MAAT,CAAgB,OAAhB;AACZ,cAAMC,QAAQ,GAAG,MAAMf,KAAK,CAAC;AACzBgB,UAAAA,MAAM,EAAE,MADiB;AAEzBC,UAAAA,GAAG,EAAE,kEAFoB;AAGzBC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAejB,QAAf,CAHmB;AAIzBkB,UAAAA,OAAO,EAAE;AAAC,4BAAgB,kBAAjB;AAAqCC,YAAAA,aAAa,EAAG,UAASlB,KAAM;AAApE;AAJgB,SAAD,CAAL,CAMnBmB,IANmB,CAMd,gBAAgBR,QAAhB,EAA0B;AAC5B;AACAL,UAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACA,cAAIS,GAAG,GAAG;AACZ,yBAAajB,SADD;AAEZ,6BAAiBQ,QAAQ,CAACG,IAAT,CAAcO,MAAd,CAAqBC,aAF1B;AAGZ,qBAASd;AAHG,WAAV;AAKHF,UAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ;AACG,gBAAMG,GAAG,GAAG,MAAM3B,KAAK,CAAC;AACvBgB,YAAAA,MAAM,EAAE,MADe;AAE1BC,YAAAA,GAAG,EAAE,gEAFqB;AAG1BC,YAAAA,IAAI,EAAEM,GAHoB;AAI1BH,YAAAA,OAAO,EAAE;AAAC,8BAAgB,qBAAjB;AAAwCC,cAAAA,aAAa,EAAG,UAASlB,KAAM;AAAvE;AAJiB,WAAD,CAAL,CAMjBmB,IANiB,CAMZ,UAAUI,GAAV,EAAe;AACpB;AACAjB,YAAAA,OAAO,CAACC,GAAR,CAAYgB,GAAZ;AACH,WAToB,EAUvBC,KAVuB,CAUjB,UAAUD,GAAV,EAAe;AACf;AACAjB,YAAAA,OAAO,CAACC,GAAR,CAAYgB,GAAZ;AACH,WAboB,CAAlB;AAcN,iBAAOA,GAAG,CAACT,IAAX;AACG,SA9BmB,EA+BnBU,KA/BmB,CA+Bb,UAAUb,QAAV,EAAoB;AACvB;AACAL,UAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACH,SAlCmB,CAAvB;AAmCA,OAzCD,CAyCE,OAAOc,GAAP,EAAY;AACbnB,QAAAA,OAAO,CAACoB,KAAR,CAAcD,GAAd;AACA,eAAOA,GAAP;AACA;AACD;AACD,GAhDD,CAgDE,OAAOA,GAAP,EAAY;AACbnB,IAAAA,OAAO,CAACoB,KAAR,CAAcD,GAAd;AACA,WAAOA,GAAP;AACA;AACD","sourcesContent":["import axios from \"axios\"\r\nimport jwt from 'jsonwebtoken'\r\n\r\nexport default async function addPublication(formData, token) {\r\n\tlet cookieData = jwt.decode(token)\r\n    let facultyId = cookieData.facultyId\r\n\ttry {\r\n\t\tif (token) {\r\n\t\t\ttry {\r\n\t\t\t\tfor (var value of formData.values()) {\r\n                    console.log(value)\r\n                }\r\n               \tlet proof = formData.get('proof')\r\n               \tformData.delete('proof');\r\n\t\t\t\tconst response = await axios({\r\n\t\t\t\t    method: 'POST',\r\n\t\t\t\t    url: 'http://localhost:3001/api/faculty/accomplishment/add/publication',\r\n\t\t\t\t    data: JSON.stringify(formData),\r\n\t\t\t\t    headers: {'Content-Type': 'application/json', Authorization: `Bearer ${token}`}\r\n\t\t\t    })\t\r\n\t\t\t    .then(async function (response) {\r\n\t\t\t        //handle success\r\n\t\t\t        console.log(response);\r\n\t\t\t        let bod = {\r\n\t\t\t    \t\t\"facultyId\": facultyId,\r\n\t\t\t    \t\t\"publicationId\": response.data.result.publicationId,\r\n\t\t\t    \t\t\"proof\": proof\r\n\t\t\t    \t}\r\n\t\t\t    \tconsole.log(bod)\r\n\t\t\t        const res = await axios({\r\n\t\t\t        \tmethod: 'POST',\r\n\t\t\t\t\t    url: 'http://localhost:3001/api/faculty/accomplishment/add/publisher',\r\n\t\t\t\t\t    data: bod,\r\n\t\t\t\t\t    headers: {'Content-Type': 'multipart/form-data', Authorization: `Bearer ${token}`}\r\n\t\t\t        })\r\n\t\t\t        .then(function (res) {\r\n\t\t\t\t        //handle success\r\n\t\t\t\t        console.log(res);\r\n\t\t\t\t    })\r\n\t\t\t\t\t.catch(function (res) {\r\n\t\t\t\t        //handle error\r\n\t\t\t\t        console.log(res);\r\n\t\t\t\t    });\r\n\t\t\t\t\treturn res.data\r\n\t\t\t    })\r\n\t\t\t    .catch(function (response) {\r\n\t\t\t        //handle error\r\n\t\t\t        console.log(response);\r\n\t\t\t    });\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(err)\r\n\t\t\t\treturn err\r\n\t\t\t}\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.error(err)\r\n\t\treturn err\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}