{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Aji Maglanque\\\\Desktop\\\\dpsm-qa-portal\\\\pages\\\\faculty\\\\basic-info\\\\[facultyId].js\";\nimport Layout from '../../../components/layout';\nimport PersonalInfo from '../../../components/faculty/basic-info/personal-info';\nimport Education from '../../../components/faculty/basic-info/education';\nimport EmploymentHistory from '../../../components/faculty/basic-info/employment-history';\nimport WorkExperience from '../../../components/faculty/basic-info/work-experience';\nimport jwt from 'jsonwebtoken';\nimport { parseCookies } from \"../../../helpers\";\n\nfunction BasicInfo(props) {\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    userId: props.data.userId,\n    facultyId: props.data.facultyId,\n    role: props.data.role,\n    name: props.data.name,\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Education, {\n        name: props.name,\n        token: props.token.user,\n        unit: props.unit,\n        position: props.position,\n        employmentType: props.employmentType,\n        facultyFlag: false,\n        children: props.education\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getServerSideProps(context) {\n  const token = parseCookies(context.req);\n  let personalInfo;\n  let name;\n  let employment;\n  let education;\n  let workExperience;\n  let data;\n  let unit;\n  let position;\n  let employmentType;\n\n  if (context.res) {\n    if (Object.keys(token).length === 0 && token.constructor === Object) {\n      return {\n        redirect: {\n          destination: '/login',\n          permanent: false\n        }\n      };\n    } else {\n      data = jwt.decode(token.user);\n      console.log(\"data\", data);\n      let userFacultyId = data.facultyId;\n      let facultyId;\n\n      if (context.params.facultyId != userFacultyId && (data.role == 2 || data.role == 3)) {\n        facultyId = context.params.facultyId;\n      } else {\n        return {\n          redirect: {\n            destination: '/faculty/basic-info',\n            permanent: true\n          }\n        };\n      }\n\n      let url = 'http://localhost:3001/api/faculty/basic-info/' + facultyId;\n      let header = {\n        headers: {\n          'Authorization': 'Bearer ' + token.user\n        }\n      };\n      const personal = await fetch(url, header);\n      personalInfo = await personal.json();\n      name = personalInfo.result.lastName + ', ' + personalInfo.result.firstName;\n      const employ = await fetch(url + '/employment', header);\n      employment = await employ.json();\n      unit = employment.result.faculty_unit.unit.unit;\n      position = employment.result.faculty_employment_infos[0].faculty_employment_position.position;\n      employmentType = employment.result.faculty_employment_infos[0].faculty_employment_position.employmentType;\n      const educ = await fetch(url + '/education', header);\n      education = await educ.json();\n      const work = await fetch(url + '/work-exp', header);\n      workExperience = await work.json();\n    }\n  }\n\n  return {\n    props: {\n      token: token && token,\n      data: data,\n      name,\n      unit,\n      position,\n      employmentType,\n      personalInfo: personalInfo.result,\n      education: education.result,\n      employment: employment.result,\n      workExperience: workExperience.result\n    }\n  };\n}\nexport default BasicInfo;","map":{"version":3,"sources":["C:/Users/Aji Maglanque/Desktop/dpsm-qa-portal/pages/faculty/basic-info/[facultyId].js"],"names":["Layout","PersonalInfo","Education","EmploymentHistory","WorkExperience","jwt","parseCookies","BasicInfo","props","data","userId","facultyId","role","name","token","user","unit","position","employmentType","education","getServerSideProps","context","req","personalInfo","employment","workExperience","res","Object","keys","length","constructor","redirect","destination","permanent","decode","console","log","userFacultyId","params","url","header","headers","personal","fetch","json","result","lastName","firstName","employ","faculty_unit","faculty_employment_infos","faculty_employment_position","educ","work"],"mappings":"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","sourcesContent":["import Layout from '../../../components/layout'\r\nimport PersonalInfo from '../../../components/faculty/basic-info/personal-info'\r\nimport Education from '../../../components/faculty/basic-info/education'\r\nimport EmploymentHistory from '../../../components/faculty/basic-info/employment-history'\r\nimport WorkExperience from '../../../components/faculty/basic-info/work-experience'\r\nimport jwt from 'jsonwebtoken'\r\nimport { parseCookies } from \"../../../helpers\"\r\n\r\nfunction BasicInfo(props) { \r\n    return (\r\n        <Layout userId={props.data.userId} facultyId={props.data.facultyId} role={props.data.role} name={props.data.name}>\r\n            <br />\r\n            <br />\r\n            <div>\r\n                <Education name = { props.name } token = { props.token.user } unit = {props.unit} position={props.position} employmentType={props.employmentType} facultyFlag={false}>{ props.education }</Education>\r\n            </div>\r\n        </Layout>\r\n    )\r\n  }\r\n\r\n  export async function getServerSideProps(context) {\r\n    const token = parseCookies(context.req)\r\n\r\n    let personalInfo\r\n    let name\r\n    let employment\r\n    let education\r\n    let workExperience\r\n    let data\r\n    let unit\r\n    let position\r\n    let employmentType\r\n\r\n    if (context.res) {\r\n        if (Object.keys(token).length === 0 && token.constructor === Object) {\r\n            return {\r\n                redirect: {\r\n                    destination: '/login',\r\n                    permanent: false,\r\n                },\r\n            }\r\n        }\r\n        else {\r\n            data = jwt.decode(token.user)\r\n            console.log(\"data\", data);\r\n        \r\n            let userFacultyId = data.facultyId\r\n            let facultyId\r\n\r\n            if(context.params.facultyId != userFacultyId && (data.role == 2 || data.role == 3) ) {\r\n                facultyId = context.params.facultyId\r\n            } else {\r\n                return {\r\n                    redirect: {\r\n                        destination: '/faculty/basic-info',\r\n                        permanent: true,\r\n                    },\r\n                }\r\n            }\r\n            \r\n            let url = 'http://localhost:3001/api/faculty/basic-info/' + facultyId;\r\n            let header = {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + token.user\r\n                }\r\n            }\r\n        \r\n            const personal = await fetch(url, header)\r\n            personalInfo = await personal.json()\r\n            name = personalInfo.result.lastName + ', ' + personalInfo.result.firstName\r\n\r\n            const employ = await fetch(url + '/employment', header)\r\n            employment = await employ.json()\r\n            unit = employment.result.faculty_unit.unit.unit\r\n            position = employment.result.faculty_employment_infos[0].faculty_employment_position.position\r\n            employmentType = employment.result.faculty_employment_infos[0].faculty_employment_position.employmentType\r\n            \r\n            const educ = await fetch(url + '/education', header)\r\n            education = await educ.json()\r\n\r\n            const work = await fetch(url + '/work-exp', header)\r\n            workExperience = await work.json()\r\n        }\r\n    } \r\n\r\n    return { \r\n        props: {\r\n            token: token && token,\r\n            data: data,\r\n            name,\r\n            unit,\r\n            position,\r\n            employmentType,\r\n            personalInfo: personalInfo.result,\r\n            education: education.result,\r\n            employment: employment.result,\r\n            workExperience: workExperience.result\r\n        }\r\n    }\r\n}\r\n\r\nexport default BasicInfo"]},"metadata":{},"sourceType":"module"}