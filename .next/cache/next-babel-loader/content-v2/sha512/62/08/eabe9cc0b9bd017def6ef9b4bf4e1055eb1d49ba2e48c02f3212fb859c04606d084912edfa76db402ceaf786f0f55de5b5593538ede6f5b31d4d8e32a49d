{"ast":null,"code":"import axios from \"axios\";\nimport jwt from 'jsonwebtoken';\nexport default async function updateFaculty(data, token) {\n  let cookieData = jwt.decode(token);\n  let facultyId = cookieData.facultyId;\n\n  try {\n    if (token) {\n      let url = 'http://localhost:3001/api/faculty/basic-info/' + facultyId;\n      let header = {\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      };\n\n      try {\n        const response = await axios.put(url + \"/personal\", {\n          lastName: `${data.lastName}`,\n          middleName: `${data.middleName}`,\n          permanentAddress: `${data.permanentAddress}`,\n          presentAddress: `${data.presentAddress}`,\n          mobile: `${data.mobile}`,\n          landline: `${data.landline}`,\n          email: `${data.email}`,\n          civilStatus: `${data.civilStatus}`,\n          religion: `${data.religion}`,\n          emergencyContactPerson: `${data.emergencyContactPerson}`,\n          emergencyContactNumber: `${data.emergencyContactNumber}`,\n          suffix: `${data.suffix}`\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        if (response.data.success) {\n          console.log(response.data);\n          return response.data;\n        } else {\n          console.error(response.message);\n          return response.data;\n        }\n      } catch (err) {\n        console.error(err);\n        return err;\n      }\n    } else {\n      console.log(access.result.message);\n    }\n  } catch (err) {\n    console.error(err);\n    return err;\n  }\n}","map":{"version":3,"sources":["D:/Bod/dpsm-qa-portal/services/faculty/basic-info/updateFaculty.js"],"names":["axios","jwt","updateFaculty","data","token","cookieData","decode","facultyId","url","header","headers","response","put","lastName","middleName","permanentAddress","presentAddress","mobile","landline","email","civilStatus","religion","emergencyContactPerson","emergencyContactNumber","suffix","Authorization","success","console","log","error","message","err","access","result"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AAEA,eAAe,eAAeC,aAAf,CAA6BC,IAA7B,EAAmCC,KAAnC,EAA0C;AACxD,MAAIC,UAAU,GAAGJ,GAAG,CAACK,MAAJ,CAAWF,KAAX,CAAjB;AACG,MAAIG,SAAS,GAAGF,UAAU,CAACE,SAA3B;;AACH,MAAI;AACA,QAAIH,KAAJ,EAAW;AACP,UAAII,GAAG,GAAG,kDAAkDD,SAA5D;AACH,UAAIE,MAAM,GAAG;AACTC,QAAAA,OAAO,EAAE;AACL,2BAAiB,YAAYN;AADxB;AADA,OAAb;;AAKG,UAAI;AACT,cAAMO,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAUJ,GAAG,GAAG,WAAhB,EAA6B;AACnDK,UAAAA,QAAQ,EAAG,GAAEV,IAAI,CAACU,QAAS,EADwB;AAEnDC,UAAAA,UAAU,EAAG,GAAEX,IAAI,CAACW,UAAW,EAFoB;AAGnDC,UAAAA,gBAAgB,EAAG,GAAEZ,IAAI,CAACY,gBAAiB,EAHQ;AAInDC,UAAAA,cAAc,EAAG,GAAEb,IAAI,CAACa,cAAe,EAJY;AAKnDC,UAAAA,MAAM,EAAG,GAAEd,IAAI,CAACc,MAAO,EAL4B;AAMnDC,UAAAA,QAAQ,EAAG,GAAEf,IAAI,CAACe,QAAS,EANwB;AAOnDC,UAAAA,KAAK,EAAG,GAAEhB,IAAI,CAACgB,KAAM,EAP8B;AAQnDC,UAAAA,WAAW,EAAG,GAAEjB,IAAI,CAACiB,WAAY,EARkB;AASnDC,UAAAA,QAAQ,EAAG,GAAElB,IAAI,CAACkB,QAAS,EATwB;AAUnDC,UAAAA,sBAAsB,EAAG,GAAEnB,IAAI,CAACmB,sBAAuB,EAVJ;AAWjDC,UAAAA,sBAAsB,EAAG,GAAEpB,IAAI,CAACoB,sBAAuB,EAXN;AAYjDC,UAAAA,MAAM,EAAG,GAAErB,IAAI,CAACqB,MAAO;AAZ0B,SAA7B,EAapB;AACFd,UAAAA,OAAO,EAAE;AACRe,YAAAA,aAAa,EAAG,UAASrB,KAAM;AADvB;AADP,SAboB,CAAvB;;AAkBA,YAAIO,QAAQ,CAACR,IAAT,CAAcuB,OAAlB,EAA2B;AAC1BC,UAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAQ,CAACR,IAArB;AACA,iBAAOQ,QAAQ,CAACR,IAAhB;AACA,SAHD,MAGO;AACNwB,UAAAA,OAAO,CAACE,KAAR,CAAclB,QAAQ,CAACmB,OAAvB;AACA,iBAAOnB,QAAQ,CAACR,IAAhB;AACA;AACD,OA1BK,CA0BJ,OAAO4B,GAAP,EAAY;AACbJ,QAAAA,OAAO,CAACE,KAAR,CAAcE,GAAd;AACA,eAAOA,GAAP;AACA;AACE,KArCD,MAqCO;AACHJ,MAAAA,OAAO,CAACC,GAAR,CAAYI,MAAM,CAACC,MAAP,CAAcH,OAA1B;AACN;AACD,GAzCD,CAyCE,OAAOC,GAAP,EAAY;AACbJ,IAAAA,OAAO,CAACE,KAAR,CAAcE,GAAd;AACA,WAAOA,GAAP;AACA;AACD","sourcesContent":["import axios from \"axios\"\r\nimport jwt from 'jsonwebtoken'\r\n\r\nexport default async function updateFaculty(data, token) {\r\n\tlet cookieData = jwt.decode(token)\r\n    let facultyId = cookieData.facultyId\r\n\ttry {\r\n\t    if (token) {\t      \r\n\t        let url = 'http://localhost:3001/api/faculty/basic-info/' + facultyId;\r\n\t\t    let header = {\r\n\t\t        headers: {\r\n\t\t            'Authorization': 'Bearer ' + token\r\n\t\t        }\r\n\t\t    }\r\n\t        try {\r\n\t\t\t\tconst response = await axios.put(url + \"/personal\", {\r\n\t\t\t\t\tlastName: `${data.lastName}`,\r\n\t\t\t\t\tmiddleName: `${data.middleName}`,\r\n\t\t\t\t\tpermanentAddress: `${data.permanentAddress}`,\r\n\t\t\t\t\tpresentAddress: `${data.presentAddress}`,\r\n\t\t\t\t\tmobile: `${data.mobile}`,\r\n\t\t\t\t\tlandline: `${data.landline}`,\r\n\t\t\t\t\temail: `${data.email}`,\r\n\t\t\t\t\tcivilStatus: `${data.civilStatus}`,\r\n\t\t\t\t\treligion: `${data.religion}`,\r\n\t\t\t\t\temergencyContactPerson: `${data.emergencyContactPerson}`,\r\n\t  \t\t\t\temergencyContactNumber: `${data.emergencyContactNumber}`,\r\n\t  \t\t\t\tsuffix: `${data.suffix}`\r\n\t\t\t\t}, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tif (response.data.success) {\r\n\t\t\t\t\tconsole.log(response.data)\r\n\t\t\t\t\treturn response.data\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(response.message)\r\n\t\t\t\t\treturn response.data\r\n\t\t\t\t}\t\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(err)\r\n\t\t\t\treturn err\r\n\t\t\t}\r\n\t    } else {\r\n\t        console.log(access.result.message)\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.error(err)\r\n\t\treturn err\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}