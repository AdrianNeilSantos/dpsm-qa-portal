{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Aji Maglanque/Desktop/dpsm-qa-portal/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Aji Maglanque/Desktop/dpsm-qa-portal/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport axios from \"axios\";\nimport jwt from 'jsonwebtoken';\nexport default function updatePublicService(_x, _x2) {\n  return _updatePublicService.apply(this, arguments);\n}\n\nfunction _updatePublicService() {\n  _updatePublicService = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(formData, token) {\n    var cookieData, facultyId, url, header, _iterator, _step, value, response;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            cookieData = jwt.decode(token);\n            facultyId = cookieData.facultyId;\n            _context.prev = 2;\n\n            if (!token) {\n              _context.next = 16;\n              break;\n            }\n\n            url = 'http://localhost:3001/api/faculty/accomplishment/' + facultyId;\n            header = {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            };\n\n            if (formData.get('proof') == \"\") {\n              formData[\"delete\"]('proof');\n            }\n\n            if (formData.get('endDate') == \"\") {\n              formData[\"delete\"]('endDate');\n            }\n\n            _iterator = _createForOfIteratorHelper(formData.values());\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                value = _step.value;\n                console.log(value);\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n\n            _context.next = 12;\n            return axios({\n              method: 'PUT',\n              url: url + '/public-service',\n              data: formData,\n              headers: {\n                'Content-Type': 'multipart/form-data',\n                Authorization: \"Bearer \".concat(token)\n              }\n            });\n\n          case 12:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.data);\n\n          case 16:\n            console.log(access.result.message);\n\n          case 17:\n            _context.next = 23;\n            break;\n\n          case 19:\n            _context.prev = 19;\n            _context.t0 = _context[\"catch\"](2);\n            console.error(_context.t0);\n            return _context.abrupt(\"return\", _context.t0);\n\n          case 23:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 19]]);\n  }));\n  return _updatePublicService.apply(this, arguments);\n}","map":{"version":3,"sources":["C:/Users/Aji Maglanque/Desktop/dpsm-qa-portal/services/faculty/accomplishments/updatePublicService.js"],"names":["axios","jwt","updatePublicService","formData","token","cookieData","decode","facultyId","url","header","headers","get","values","value","console","log","method","data","Authorization","response","access","result","message","error"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AAEA,wBAA8BC,mBAA9B;AAAA;AAAA;;;kFAAe,iBAAmCC,QAAnC,EAA6CC,KAA7C;AAAA;;AAAA;AAAA;AAAA;AAAA;AACVC,YAAAA,UADU,GACGJ,GAAG,CAACK,MAAJ,CAAWF,KAAX,CADH;AAEPG,YAAAA,SAFO,GAEKF,UAAU,CAACE,SAFhB;AAAA;;AAAA,iBAINH,KAJM;AAAA;AAAA;AAAA;;AAKFI,YAAAA,GALE,GAKI,sDAAsDD,SAL1D;AAMLE,YAAAA,MANK,GAMI;AACTC,cAAAA,OAAO,EAAE;AACL,iCAAiB,YAAYN;AADxB;AADA,aANJ;;AAWT,gBAAGD,QAAQ,CAACQ,GAAT,CAAa,OAAb,KAAyB,EAA5B,EAAgC;AAClCR,cAAAA,QAAQ,UAAR,CAAgB,OAAhB;AACA;;AACD,gBAAGA,QAAQ,CAACQ,GAAT,CAAa,SAAb,KAA2B,EAA9B,EAAkC;AACjCR,cAAAA,QAAQ,UAAR,CAAgB,SAAhB;AACA;;AAhBW,mDAiBSA,QAAQ,CAACS,MAAT,EAjBT;;AAAA;AAiBT,kEAAqC;AAA5BC,gBAAAA,KAA4B;AAC3BC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AAnBE;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAoBcb,KAAK,CAAC;AAC5BgB,cAAAA,MAAM,EAAE,KADoB;AAE5BR,cAAAA,GAAG,EAAEA,GAAG,GAAG,iBAFiB;AAG5BS,cAAAA,IAAI,EAAEd,QAHsB;AAI5BO,cAAAA,OAAO,EAAE;AAAC,gCAAgB,qBAAjB;AAAwCQ,gBAAAA,aAAa,mBAAYd,KAAZ;AAArD;AAJmB,aAAD,CApBnB;;AAAA;AAoBHe,YAAAA,QApBG;AAAA,6CA0BLA,QAAQ,CAACF,IA1BJ;;AAAA;AA4BNH,YAAAA,OAAO,CAACC,GAAR,CAAYK,MAAM,CAACC,MAAP,CAAcC,OAA1B;;AA5BM;AAAA;AAAA;;AAAA;AAAA;AAAA;AA+BbR,YAAAA,OAAO,CAACS,KAAR;AA/Ba;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import axios from \"axios\"\r\nimport jwt from 'jsonwebtoken'\r\n\r\nexport default async function updatePublicService(formData, token) {\r\n\tlet cookieData = jwt.decode(token)\r\n    let facultyId = cookieData.facultyId\r\n\ttry {\r\n\t    if (token) {\r\n\t        let url = 'http://localhost:3001/api/faculty/accomplishment/' + facultyId;\r\n\t\t    let header = {\r\n\t\t        headers: {\r\n\t\t            'Authorization': 'Bearer ' + token\r\n\t\t        }\r\n\t\t    }\r\n\t\t    if(formData.get('proof') == \"\") {\r\n\t\t\t\tformData.delete('proof')\r\n\t\t\t}\r\n\t\t\tif(formData.get('endDate') == \"\") {\r\n\t\t\t\tformData.delete('endDate')\r\n\t\t\t}\r\n\t\t    for (var value of formData.values()) {\r\n                console.log(value)\r\n            }\r\n\t\t    const response = await axios({\r\n\t\t\t    method: 'PUT',\r\n\t\t\t    url: url + '/public-service',\r\n\t\t\t    data: formData,\r\n\t\t\t    headers: {'Content-Type': 'multipart/form-data', Authorization: `Bearer ${token}`}\r\n\t\t    })\t\r\n\t\t\treturn response.data\r\n\t    } else {\r\n\t        console.log(access.result.message)\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.error(err)\r\n\t\treturn err\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}