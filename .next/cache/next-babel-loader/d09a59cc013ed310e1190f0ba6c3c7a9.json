{"ast":null,"code":"import axios from \"axios\";\nexport default async function addEducation(data) {\n  try {\n    let token = null;\n    const tokenRes = await axios.post(\"https://sp-api-test.alun.app/api/token\", {\n      username: \"username\",\n      password: \"password\"\n    });\n\n    if (tokenRes.data.success) {\n      token = tokenRes.data.result;\n\n      try {\n        bod = {\n          facultyId: \"9\",\n          institutionSchool: `${data.institutionSchool}`,\n          degreeCert: `${data.degreeCert}`,\n          majorSpecialization: `${data.majorSpecialization}`,\n          startDate: `${data.startDate}`,\n          endDate: `${data.endDate}`,\n          proof: `${data.proof}`,\n          status: \"For Verification\"\n        };\n        console.log(bod);\n        const response = await axios.post(\"https://sp-api-test.alun.app/api/faculty/basic-info/add/education\", {\n          facultyId: \"9\",\n          institutionSchool: `${data.institutionSchool}`,\n          degreeCert: `${data.degreeCert}`,\n          majorSpecialization: `${data.majorSpecialization}`,\n          startDate: `${data.startDate}`,\n          endDate: `${data.endDate}`,\n          proof: `${data.proof}`,\n          status: \"For Verification\"\n        }, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(response);\n\n        if (response.data.success) {\n          console.log(response.data);\n          return response.data;\n        } else {\n          console.error(response.message);\n          return response.data;\n        }\n      } catch (err) {\n        console.error(err);\n        return err;\n      }\n    }\n  } catch (err) {\n    console.error(err);\n    return err;\n  }\n}","map":{"version":3,"sources":["C:/Users/Aji Maglanque/Desktop/dpsm-qa-portal/services/faculty/basic-info/addEducation.js"],"names":["axios","addEducation","data","token","tokenRes","post","username","password","success","result","bod","facultyId","institutionSchool","degreeCert","majorSpecialization","startDate","endDate","proof","status","console","log","response","headers","Authorization","error","message","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,eAAeC,YAAf,CAA4BC,IAA5B,EAAkC;AAChD,MAAI;AACH,QAAIC,KAAK,GAAG,IAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAN,CAAW,wCAAX,EAAqD;AAC3EC,MAAAA,QAAQ,EAAE,UADiE;AAE3EC,MAAAA,QAAQ,EAAE;AAFiE,KAArD,CAAvB;;AAKA,QAAGH,QAAQ,CAACF,IAAT,CAAcM,OAAjB,EAA0B;AACzBL,MAAAA,KAAK,GAAGC,QAAQ,CAACF,IAAT,CAAcO,MAAtB;;AACA,UAAI;AACHC,QAAAA,GAAG,GAAG;AACLC,UAAAA,SAAS,EAAE,GADN;AAELC,UAAAA,iBAAiB,EAAG,GAAEV,IAAI,CAACU,iBAAkB,EAFxC;AAGLC,UAAAA,UAAU,EAAG,GAAEX,IAAI,CAACW,UAAW,EAH1B;AAILC,UAAAA,mBAAmB,EAAG,GAAEZ,IAAI,CAACY,mBAAoB,EAJ5C;AAKLC,UAAAA,SAAS,EAAG,GAAEb,IAAI,CAACa,SAAU,EALxB;AAMLC,UAAAA,OAAO,EAAG,GAAEd,IAAI,CAACc,OAAQ,EANpB;AAOLC,UAAAA,KAAK,EAAG,GAAEf,IAAI,CAACe,KAAM,EAPhB;AAQLC,UAAAA,MAAM,EAAE;AARH,SAAN;AAUAC,QAAAA,OAAO,CAACC,GAAR,CAAYV,GAAZ;AACA,cAAMW,QAAQ,GAAG,MAAMrB,KAAK,CAACK,IAAN,CAAW,mEAAX,EAAgF;AACtGM,UAAAA,SAAS,EAAE,GAD2F;AAEtGC,UAAAA,iBAAiB,EAAG,GAAEV,IAAI,CAACU,iBAAkB,EAFyD;AAGtGC,UAAAA,UAAU,EAAG,GAAEX,IAAI,CAACW,UAAW,EAHuE;AAItGC,UAAAA,mBAAmB,EAAG,GAAEZ,IAAI,CAACY,mBAAoB,EAJqD;AAKtGC,UAAAA,SAAS,EAAG,GAAEb,IAAI,CAACa,SAAU,EALyE;AAMtGC,UAAAA,OAAO,EAAG,GAAEd,IAAI,CAACc,OAAQ,EAN6E;AAOtGC,UAAAA,KAAK,EAAG,GAAEf,IAAI,CAACe,KAAM,EAPiF;AAQtGC,UAAAA,MAAM,EAAE;AAR8F,SAAhF,EASpB;AACFI,UAAAA,OAAO,EAAE;AACR,4BAAgB,qBADR;AAERC,YAAAA,aAAa,EAAG,UAASpB,KAAM;AAFvB;AADP,SAToB,CAAvB;AAeAgB,QAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;;AACA,YAAIA,QAAQ,CAACnB,IAAT,CAAcM,OAAlB,EAA2B;AAC1BW,UAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACnB,IAArB;AACA,iBAAOmB,QAAQ,CAACnB,IAAhB;AACA,SAHD,MAGO;AACNiB,UAAAA,OAAO,CAACK,KAAR,CAAcH,QAAQ,CAACI,OAAvB;AACA,iBAAOJ,QAAQ,CAACnB,IAAhB;AACA;AACD,OAnCD,CAmCE,OAAOwB,GAAP,EAAY;AACbP,QAAAA,OAAO,CAACK,KAAR,CAAcE,GAAd;AACA,eAAOA,GAAP;AACA;AACD;AACD,GAjDD,CAiDE,OAAOA,GAAP,EAAY;AACbP,IAAAA,OAAO,CAACK,KAAR,CAAcE,GAAd;AACA,WAAOA,GAAP;AACA;AACD","sourcesContent":["import axios from \"axios\"\r\n\r\nexport default async function addEducation(data) {\r\n\ttry {\r\n\t\tlet token = null\r\n\t\tconst tokenRes = await axios.post(\"https://sp-api-test.alun.app/api/token\", {\r\n\t\t\tusername: \"username\",\r\n\t\t\tpassword: \"password\"\r\n\t\t})\r\n\r\n\t\tif(tokenRes.data.success) {\r\n\t\t\ttoken = tokenRes.data.result\r\n\t\t\ttry {\r\n\t\t\t\tbod = {\r\n\t\t\t\t\tfacultyId: \"9\",\r\n\t\t\t\t\tinstitutionSchool: `${data.institutionSchool}`,\r\n\t\t\t\t\tdegreeCert: `${data.degreeCert}`,\r\n\t\t\t\t\tmajorSpecialization: `${data.majorSpecialization}`,\r\n\t\t\t\t\tstartDate: `${data.startDate}`,\r\n\t\t\t\t\tendDate: `${data.endDate}`,\r\n\t\t\t\t\tproof: `${data.proof}`,\r\n\t\t\t\t\tstatus: \"For Verification\"\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(bod)\r\n\t\t\t\tconst response = await axios.post(\"https://sp-api-test.alun.app/api/faculty/basic-info/add/education\", {\r\n\t\t\t\t\tfacultyId: \"9\",\r\n\t\t\t\t\tinstitutionSchool: `${data.institutionSchool}`,\r\n\t\t\t\t\tdegreeCert: `${data.degreeCert}`,\r\n\t\t\t\t\tmajorSpecialization: `${data.majorSpecialization}`,\r\n\t\t\t\t\tstartDate: `${data.startDate}`,\r\n\t\t\t\t\tendDate: `${data.endDate}`,\r\n\t\t\t\t\tproof: `${data.proof}`,\r\n\t\t\t\t\tstatus: \"For Verification\"\r\n\t\t\t\t}, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t'Content-Type': 'multipart/form-data',\r\n\t\t\t\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tconsole.log(response)\r\n\t\t\t\tif (response.data.success) {\r\n\t\t\t\t\tconsole.log(response.data)\r\n\t\t\t\t\treturn response.data\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(response.message)\r\n\t\t\t\t\treturn response.data\r\n\t\t\t\t}\t\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(err)\r\n\t\t\t\treturn err\r\n\t\t\t}\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.error(err)\r\n\t\treturn err\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}