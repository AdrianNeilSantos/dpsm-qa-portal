{"ast":null,"code":"import axios from \"axios\";\nimport jwt from 'jsonwebtoken';\nexport default async function updateFaculty(data) {\n  try {\n    let url = 'http://localhost:3001/api/';\n    const res = await fetch(url + 'login', {\n      body: JSON.stringify({\n        \"upemail\": \"jpcristobal1@upm.edu.ph\",\n        \"password\": \"password\"\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'POST'\n    });\n    const access = await res.json();\n    let token = access.result.token;\n    let facultyId = 0;\n\n    if (token) {\n      const json = jwt.decode(token);\n      facultyId = json.facultyId;\n\n      try {\n        const response = await axios.put(\"https://sp-api-test.alun.app/api/faculty/basic-info/9/personal\", {\n          lastName: `${data.lastName}`,\n          middleName: `${data.middleName}`,\n          permanentAddress: `${data.permanentAddress}`,\n          presentAddress: `${data.presentAddress}`,\n          mobile: `${data.mobile}`,\n          landline: `${data.landline}`,\n          email: `${data.email}`,\n          civilStatus: `${data.civilStatus}`,\n          religion: `${data.religion}`,\n          emergencyContactPerson: `${data.emergencyContactPerson}`,\n          emergencyContactNumber: `${data.emergencyContactNumber}`\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        if (response.data.success) {\n          console.log(response.data);\n          return response.data;\n        } else {\n          console.error(response.message);\n          return response.data;\n        }\n      } catch (err) {\n        console.error(err);\n        return err;\n      }\n    } else {\n      console.log(access.result.message);\n    }\n  } catch (err) {\n    console.error(err);\n    return err;\n  }\n}","map":{"version":3,"sources":["C:/Users/Aji Maglanque/Desktop/dpsm-qa-portal/services/faculty/basic-info/updateFaculty.js"],"names":["axios","jwt","updateFaculty","data","url","res","fetch","body","JSON","stringify","headers","method","access","json","token","result","facultyId","decode","response","put","lastName","middleName","permanentAddress","presentAddress","mobile","landline","email","civilStatus","religion","emergencyContactPerson","emergencyContactNumber","Authorization","success","console","log","error","message","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AAEA,eAAe,eAAeC,aAAf,CAA6BC,IAA7B,EAAmC;AACjD,MAAI;AACH,QAAIC,GAAG,GAAG,4BAAV;AACG,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAG,GAAG,OAAP,EACvB;AACIG,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAC,mBAAW,yBAAZ;AAAuC,oBAAY;AAAnD,OAAf,CADV;AAEIC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFb;AAKIC,MAAAA,MAAM,EAAE;AALZ,KADuB,CAAvB;AASA,UAAMC,MAAM,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAArB;AACA,QAAIC,KAAK,GAAGF,MAAM,CAACG,MAAP,CAAcD,KAA1B;AACA,QAAIE,SAAS,GAAG,CAAhB;;AACA,QAAIF,KAAJ,EAAW;AACP,YAAMD,IAAI,GAAGZ,GAAG,CAACgB,MAAJ,CAAWH,KAAX,CAAb;AACAE,MAAAA,SAAS,GAAGH,IAAI,CAACG,SAAjB;;AACA,UAAI;AACT,cAAME,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAU,gEAAV,EAA4E;AAClGC,UAAAA,QAAQ,EAAG,GAAEjB,IAAI,CAACiB,QAAS,EADuE;AAElGC,UAAAA,UAAU,EAAG,GAAElB,IAAI,CAACkB,UAAW,EAFmE;AAGlGC,UAAAA,gBAAgB,EAAG,GAAEnB,IAAI,CAACmB,gBAAiB,EAHuD;AAIlGC,UAAAA,cAAc,EAAG,GAAEpB,IAAI,CAACoB,cAAe,EAJ2D;AAKlGC,UAAAA,MAAM,EAAG,GAAErB,IAAI,CAACqB,MAAO,EAL2E;AAMlGC,UAAAA,QAAQ,EAAG,GAAEtB,IAAI,CAACsB,QAAS,EANuE;AAOlGC,UAAAA,KAAK,EAAG,GAAEvB,IAAI,CAACuB,KAAM,EAP6E;AAQlGC,UAAAA,WAAW,EAAG,GAAExB,IAAI,CAACwB,WAAY,EARiE;AASlGC,UAAAA,QAAQ,EAAG,GAAEzB,IAAI,CAACyB,QAAS,EATuE;AAUlGC,UAAAA,sBAAsB,EAAG,GAAE1B,IAAI,CAAC0B,sBAAuB,EAV2C;AAWhGC,UAAAA,sBAAsB,EAAG,GAAE3B,IAAI,CAAC2B,sBAAuB;AAXyC,SAA5E,EAYpB;AACFpB,UAAAA,OAAO,EAAE;AACRqB,YAAAA,aAAa,EAAG,UAASjB,KAAM;AADvB;AADP,SAZoB,CAAvB;;AAiBA,YAAII,QAAQ,CAACf,IAAT,CAAc6B,OAAlB,EAA2B;AAC1BC,UAAAA,OAAO,CAACC,GAAR,CAAYhB,QAAQ,CAACf,IAArB;AACA,iBAAOe,QAAQ,CAACf,IAAhB;AACA,SAHD,MAGO;AACN8B,UAAAA,OAAO,CAACE,KAAR,CAAcjB,QAAQ,CAACkB,OAAvB;AACA,iBAAOlB,QAAQ,CAACf,IAAhB;AACA;AACD,OAzBK,CAyBJ,OAAOkC,GAAP,EAAY;AACbJ,QAAAA,OAAO,CAACE,KAAR,CAAcE,GAAd;AACA,eAAOA,GAAP;AACA;AACE,KAhCD,MAgCO;AACHJ,MAAAA,OAAO,CAACC,GAAR,CAAYtB,MAAM,CAACG,MAAP,CAAcqB,OAA1B;AACN;AACD,GAjDD,CAiDE,OAAOC,GAAP,EAAY;AACbJ,IAAAA,OAAO,CAACE,KAAR,CAAcE,GAAd;AACA,WAAOA,GAAP;AACA;AACD","sourcesContent":["import axios from \"axios\"\r\nimport jwt from 'jsonwebtoken'\r\n\r\nexport default async function updateFaculty(data) {\r\n\ttry {\r\n\t\tlet url = 'http://localhost:3001/api/'\r\n\t    const res = await fetch(url + 'login',\r\n\t    {\r\n\t        body: JSON.stringify({\"upemail\": \"jpcristobal1@upm.edu.ph\", \"password\": \"password\"}),\r\n\t        headers: {\r\n\t            'Content-Type': 'application/json'\r\n\t        },\r\n\t        method: 'POST'\r\n\t    })\r\n\t    \r\n\t    const access = await res.json()\r\n\t    let token = access.result.token\r\n\t    let facultyId = 0;\r\n\t    if (token) {\r\n\t        const json = jwt.decode(token)\r\n\t        facultyId = json.facultyId\r\n\t        try {\r\n\t\t\t\tconst response = await axios.put(\"https://sp-api-test.alun.app/api/faculty/basic-info/9/personal\", {\r\n\t\t\t\t\tlastName: `${data.lastName}`,\r\n\t\t\t\t\tmiddleName: `${data.middleName}`,\r\n\t\t\t\t\tpermanentAddress: `${data.permanentAddress}`,\r\n\t\t\t\t\tpresentAddress: `${data.presentAddress}`,\r\n\t\t\t\t\tmobile: `${data.mobile}`,\r\n\t\t\t\t\tlandline: `${data.landline}`,\r\n\t\t\t\t\temail: `${data.email}`,\r\n\t\t\t\t\tcivilStatus: `${data.civilStatus}`,\r\n\t\t\t\t\treligion: `${data.religion}`,\r\n\t\t\t\t\temergencyContactPerson: `${data.emergencyContactPerson}`,\r\n\t  \t\t\t\temergencyContactNumber: `${data.emergencyContactNumber}`\r\n\t\t\t\t}, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tif (response.data.success) {\r\n\t\t\t\t\tconsole.log(response.data)\r\n\t\t\t\t\treturn response.data\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(response.message)\r\n\t\t\t\t\treturn response.data\r\n\t\t\t\t}\t\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(err)\r\n\t\t\t\treturn err\r\n\t\t\t}\r\n\t    } else {\r\n\t        console.log(access.result.message)\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.error(err)\r\n\t\treturn err\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}