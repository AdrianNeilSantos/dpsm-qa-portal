{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport axios from \"axios\";\nexport default function addEducation(_x, _x2) {\n  return _addEducation.apply(this, arguments);\n}\n\nfunction _addEducation() {\n  _addEducation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data, formData) {\n    var token, tokenRes, _iterator, _step, value, response;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            token = null;\n            _context.next = 4;\n            return axios.post(\"https://sp-api-test.alun.app/api/token\", {\n              username: \"username\",\n              password: \"password\"\n            });\n\n          case 4:\n            tokenRes = _context.sent;\n\n            if (!tokenRes.data.success) {\n              _context.next = 22;\n              break;\n            }\n\n            token = tokenRes.data.result;\n            _context.prev = 7;\n            // let bod = {\n            // \tfacultyId: \"9\",\n            // \tinstitutionSchool: `${data.institutionSchool}`,\n            // \tdegreeCert: `${data.degreeCert}`,\n            // \tmajorSpecialization: `${data.majorSpecialization}`,\n            // \tstartDate: `${data.startDate}`,\n            // \tendDate: `${data.endDate}`,\n            // \tproof: `${data.proof}`,\n            // \tstatus: \"For Verification\"\n            // }\n            // console.log(bod)\n            // const response = await axios.post(\"https://sp-api-test.alun.app/api/faculty/basic-info/add/education\", {\n            // \tfacultyId: \"9\",\n            // \tinstitutionSchool: `${data.institutionSchool}`,\n            // \tdegreeCert: `${data.degreeCert}`,\n            // \tmajorSpecialization: `${data.majorSpecialization}`,\n            // \tstartDate: `${data.startDate}`,\n            // \tendDate: `${data.endDate}`,\n            // \tproof: `${data.proof}`,\n            // \tstatus: \"For Verification\"\n            // }, {\n            // \theaders: {\n            // \t\t'Content-Type': 'multipart/form-data',\n            // \t\tAuthorization: `Bearer ${token}`\n            // \t}\n            // })\n            // console.log(`${data.proof}`)\n            // let formData = new FormData();\n            // postData.append('facultyId', '9');\n            // postData.append('institutionSchool', `${data.institutionSchool}`);\n            // postData.append('degreeCert', `${data.degreeCert}`);\n            // postData.append('majorSpecialization', `${data.majorSpecialization}`);\n            // postData.append('startDate', `${data.startDate}`);\n            // postData.append('endDate', `${data.endDate}`);\n            // // postData.append('proof', `${data.proof}`);\n            // for (var value of postData.values()) {\n            // \t\t  console.log(value);\n            // }\n            console.log(formData.get(endDate));\n            console.log(\"hey\");\n\n            if (formData.get(endDate) == \"\") {\n              formData[\"delete\"](endDate);\n            }\n\n            _iterator = _createForOfIteratorHelper(formData.values());\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                value = _step.value;\n                console.log(value);\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n\n            _context.next = 15;\n            return axios({\n              method: 'POST',\n              url: 'https://sp-api-test.alun.app/api/faculty/basic-info/add/education',\n              data: formData,\n              headers: {\n                'Content-Type': 'multipart/form-data',\n                Authorization: \"Bearer \".concat(token)\n              }\n            }).then(function (response) {\n              //handle success\n              console.log(response);\n            })[\"catch\"](function (response) {\n              //handle error\n              console.log(response);\n            });\n\n          case 15:\n            response = _context.sent;\n            _context.next = 22;\n            break;\n\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](7);\n            console.error(_context.t0);\n            return _context.abrupt(\"return\", _context.t0);\n\n          case 22:\n            _context.next = 28;\n            break;\n\n          case 24:\n            _context.prev = 24;\n            _context.t1 = _context[\"catch\"](0);\n            console.error(_context.t1);\n            return _context.abrupt(\"return\", _context.t1);\n\n          case 28:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 24], [7, 18]]);\n  }));\n  return _addEducation.apply(this, arguments);\n}","map":{"version":3,"sources":["C:/Users/Aji Maglanque/Desktop/dpsm-qa-portal/services/faculty/basic-info/addEducation.js"],"names":["axios","addEducation","data","formData","token","post","username","password","tokenRes","success","result","console","log","get","endDate","values","value","method","url","headers","Authorization","then","response","error"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,wBAA8BC,YAA9B;AAAA;AAAA;;;2EAAe,iBAA4BC,IAA5B,EAAkCC,QAAlC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAETC,YAAAA,KAFS,GAED,IAFC;AAAA;AAAA,mBAGUJ,KAAK,CAACK,IAAN,CAAW,wCAAX,EAAqD;AAC3EC,cAAAA,QAAQ,EAAE,UADiE;AAE3EC,cAAAA,QAAQ,EAAE;AAFiE,aAArD,CAHV;;AAAA;AAGPC,YAAAA,QAHO;;AAAA,iBAQVA,QAAQ,CAACN,IAAT,CAAcO,OARJ;AAAA;AAAA;AAAA;;AASZL,YAAAA,KAAK,GAAGI,QAAQ,CAACN,IAAT,CAAcQ,MAAtB;AATY;AAWX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAYT,QAAQ,CAACU,GAAT,CAAaC,OAAb,CAAZ;AACAH,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;;AACA,gBAAGT,QAAQ,CAACU,GAAT,CAAaC,OAAb,KAAyB,EAA5B,EAAgC;AAC/BX,cAAAA,QAAQ,UAAR,CAAgBW,OAAhB;AACA;;AAvDU,mDAwDOX,QAAQ,CAACY,MAAT,EAxDP;;AAAA;AAwDX,kEAAqC;AAA5BC,gBAAAA,KAA4B;AACjCL,gBAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH;AA1DU;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,mBA2DYhB,KAAK,CAAC;AACzBiB,cAAAA,MAAM,EAAE,MADiB;AAEzBC,cAAAA,GAAG,EAAE,mEAFoB;AAGzBhB,cAAAA,IAAI,EAAEC,QAHmB;AAIzBgB,cAAAA,OAAO,EAAE;AAAC,gCAAgB,qBAAjB;AAAwCC,gBAAAA,aAAa,mBAAYhB,KAAZ;AAArD;AAJgB,aAAD,CAAL,CAMnBiB,IANmB,CAMd,UAAUC,QAAV,EAAoB;AACtB;AACAX,cAAAA,OAAO,CAACC,GAAR,CAAYU,QAAZ;AACH,aATmB,WAUb,UAAUA,QAAV,EAAoB;AACvB;AACAX,cAAAA,OAAO,CAACC,GAAR,CAAYU,QAAZ;AACH,aAbmB,CA3DZ;;AAAA;AA2DLA,YAAAA,QA3DK;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkFXX,YAAAA,OAAO,CAACY,KAAR;AAlFW;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAuFbZ,YAAAA,OAAO,CAACY,KAAR;AAvFa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import axios from \"axios\"\r\n\r\nexport default async function addEducation(data, formData) {\r\n\ttry {\r\n\t\tlet token = null\r\n\t\tconst tokenRes = await axios.post(\"https://sp-api-test.alun.app/api/token\", {\r\n\t\t\tusername: \"username\",\r\n\t\t\tpassword: \"password\"\r\n\t\t})\r\n\r\n\t\tif(tokenRes.data.success) {\r\n\t\t\ttoken = tokenRes.data.result\r\n\t\t\ttry {\r\n\t\t\t\t// let bod = {\r\n\t\t\t\t// \tfacultyId: \"9\",\r\n\t\t\t\t// \tinstitutionSchool: `${data.institutionSchool}`,\r\n\t\t\t\t// \tdegreeCert: `${data.degreeCert}`,\r\n\t\t\t\t// \tmajorSpecialization: `${data.majorSpecialization}`,\r\n\t\t\t\t// \tstartDate: `${data.startDate}`,\r\n\t\t\t\t// \tendDate: `${data.endDate}`,\r\n\t\t\t\t// \tproof: `${data.proof}`,\r\n\t\t\t\t// \tstatus: \"For Verification\"\r\n\t\t\t\t// }\r\n\t\t\t\t// console.log(bod)\r\n\t\t\t\t// const response = await axios.post(\"https://sp-api-test.alun.app/api/faculty/basic-info/add/education\", {\r\n\t\t\t\t// \tfacultyId: \"9\",\r\n\t\t\t\t// \tinstitutionSchool: `${data.institutionSchool}`,\r\n\t\t\t\t// \tdegreeCert: `${data.degreeCert}`,\r\n\t\t\t\t// \tmajorSpecialization: `${data.majorSpecialization}`,\r\n\t\t\t\t// \tstartDate: `${data.startDate}`,\r\n\t\t\t\t// \tendDate: `${data.endDate}`,\r\n\t\t\t\t// \tproof: `${data.proof}`,\r\n\t\t\t\t// \tstatus: \"For Verification\"\r\n\t\t\t\t// }, {\r\n\t\t\t\t// \theaders: {\r\n\t\t\t\t// \t\t'Content-Type': 'multipart/form-data',\r\n\t\t\t\t// \t\tAuthorization: `Bearer ${token}`\r\n\t\t\t\t// \t}\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// console.log(`${data.proof}`)\r\n\t\t\t\t// let formData = new FormData();\r\n\r\n\t\t\t\t// postData.append('facultyId', '9');\r\n\t\t\t\t// postData.append('institutionSchool', `${data.institutionSchool}`);\r\n\t\t\t\t// postData.append('degreeCert', `${data.degreeCert}`);\r\n\t\t\t\t// postData.append('majorSpecialization', `${data.majorSpecialization}`);\r\n\t\t\t\t// postData.append('startDate', `${data.startDate}`);\r\n\t\t\t\t// postData.append('endDate', `${data.endDate}`);\r\n\t\t\t\t// // postData.append('proof', `${data.proof}`);\r\n\t\t\t\t// for (var value of postData.values()) {\r\n \t\t\t// \t\t  console.log(value);\r\n\t\t\t\t// }\r\n\t\t\t\tconsole.log(formData.get(endDate))\r\n\t\t\t\tconsole.log(\"hey\")\r\n\t\t\t\tif(formData.get(endDate) == \"\") {\r\n\t\t\t\t\tformData.delete(endDate)\r\n\t\t\t\t}\r\n\t\t\t\tfor (var value of formData.values()) {\r\n \t\t\t\t\t  console.log(value);\r\n\t\t\t\t}\r\n\t\t\t\tconst response = await axios({\r\n\t\t\t\t    method: 'POST',\r\n\t\t\t\t    url: 'https://sp-api-test.alun.app/api/faculty/basic-info/add/education',\r\n\t\t\t\t    data: formData,\r\n\t\t\t\t    headers: {'Content-Type': 'multipart/form-data', Authorization: `Bearer ${token}`}\r\n\t\t\t    })\t\r\n\t\t\t    .then(function (response) {\r\n\t\t\t        //handle success\r\n\t\t\t        console.log(response);\r\n\t\t\t    })\r\n\t\t\t    .catch(function (response) {\r\n\t\t\t        //handle error\r\n\t\t\t        console.log(response);\r\n\t\t\t    });\r\n\t\t\t\t// console.log(response)\r\n\t\t\t\t// if (response.data.success) {\r\n\t\t\t\t// \tconsole.log(response.data)\r\n\t\t\t\t// \treturn response.data\r\n\t\t\t\t// } else {\r\n\t\t\t\t// \tconsole.error(response.message)\r\n\t\t\t\t// \treturn response.data\r\n\t\t\t\t// }\t\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(err)\r\n\t\t\t\treturn err\r\n\t\t\t}\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.error(err)\r\n\t\treturn err\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}