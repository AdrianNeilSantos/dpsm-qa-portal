{"ast":null,"code":"import axios from \"axios\";\nexport default async function addResearch(data) {\n  try {\n    let token = null;\n    const tokenRes = await axios.post(\"https://sp-api-test.alun.app/api/token\", {\n      username: \"username\",\n      password: \"password\"\n    });\n\n    if (tokenRes.data.success) {\n      token = tokenRes.data.result;\n      let bod = {\n        researchName: `${data.researchName}`,\n        granter: `${data.granter}`,\n        amount: `${data.amount}`,\n        projectedStart: `${data.projectedStart}`,\n        projectedEnd: `${data.projectedEnd}`,\n        actualStart: `${data.actualStart}`,\n        actualEnd: `${data.actualEnd}`,\n        researchProgress: `${data.researchProgress}`,\n        nonFacultyResearchers: `${data.nonFacultyResearchers}`\n      };\n\n      try {\n        console.log(bod);\n        const response = await axios.post(\"https://sp-api-test.alun.app/api/faculty/accomplishment/add/research-grant\", {\n          researchName: `${data.researchName}`,\n          granter: `${data.granter}`,\n          amount: `${data.amount}`,\n          projectedStart: `${data.projectedStart}`,\n          projectedEnd: `${data.projectedEnd}`,\n          actualStart: `${data.actualStart}`,\n          actualEnd: `${data.actualEnd}`,\n          researchProgress: `${data.researchProgress}`,\n          nonFacultyResearchers: `${data.nonFacultyResearchers}`\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        if (response.data.success) {\n          console.log(response.data);\n          return response.data;\n        } else {\n          console.error(response.message);\n          return response.data;\n        }\n      } catch (err) {\n        console.error(err);\n        return err;\n      }\n    }\n  } catch (err) {\n    console.error(err);\n    return err;\n  }\n}","map":{"version":3,"sources":["C:/Users/Aji Maglanque/Desktop/dpsm-qa-portal/services/faculty/accomplishments/addResearch.js"],"names":["axios","addResearch","data","token","tokenRes","post","username","password","success","result","bod","researchName","granter","amount","projectedStart","projectedEnd","actualStart","actualEnd","researchProgress","nonFacultyResearchers","console","log","response","headers","Authorization","error","message","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,eAAeC,WAAf,CAA2BC,IAA3B,EAAiC;AAC/C,MAAI;AACH,QAAIC,KAAK,GAAG,IAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAN,CAAW,wCAAX,EAAqD;AAC3EC,MAAAA,QAAQ,EAAE,UADiE;AAE3EC,MAAAA,QAAQ,EAAE;AAFiE,KAArD,CAAvB;;AAKA,QAAGH,QAAQ,CAACF,IAAT,CAAcM,OAAjB,EAA0B;AACzBL,MAAAA,KAAK,GAAGC,QAAQ,CAACF,IAAT,CAAcO,MAAtB;AACA,UAAIC,GAAG,GAAG;AACTC,QAAAA,YAAY,EAAG,GAAET,IAAI,CAACS,YAAa,EAD1B;AAETC,QAAAA,OAAO,EAAG,GAAEV,IAAI,CAACU,OAAQ,EAFhB;AAGTC,QAAAA,MAAM,EAAG,GAAEX,IAAI,CAACW,MAAO,EAHd;AAITC,QAAAA,cAAc,EAAG,GAAEZ,IAAI,CAACY,cAAe,EAJ9B;AAKTC,QAAAA,YAAY,EAAG,GAAEb,IAAI,CAACa,YAAa,EAL1B;AAMTC,QAAAA,WAAW,EAAG,GAAEd,IAAI,CAACc,WAAY,EANxB;AAOTC,QAAAA,SAAS,EAAG,GAAEf,IAAI,CAACe,SAAU,EAPpB;AAQTC,QAAAA,gBAAgB,EAAG,GAAEhB,IAAI,CAACgB,gBAAiB,EARlC;AASTC,QAAAA,qBAAqB,EAAG,GAAEjB,IAAI,CAACiB,qBAAsB;AAT5C,OAAV;;AAWA,UAAI;AACHC,QAAAA,OAAO,CAACC,GAAR,CAAYX,GAAZ;AACA,cAAMY,QAAQ,GAAG,MAAMtB,KAAK,CAACK,IAAN,CAAW,4EAAX,EAAyF;AAC/GM,UAAAA,YAAY,EAAG,GAAET,IAAI,CAACS,YAAa,EAD4E;AAE/GC,UAAAA,OAAO,EAAG,GAAEV,IAAI,CAACU,OAAQ,EAFsF;AAG/GC,UAAAA,MAAM,EAAG,GAAEX,IAAI,CAACW,MAAO,EAHwF;AAI/GC,UAAAA,cAAc,EAAG,GAAEZ,IAAI,CAACY,cAAe,EAJwE;AAK/GC,UAAAA,YAAY,EAAG,GAAEb,IAAI,CAACa,YAAa,EAL4E;AAM/GC,UAAAA,WAAW,EAAG,GAAEd,IAAI,CAACc,WAAY,EAN8E;AAO/GC,UAAAA,SAAS,EAAG,GAAEf,IAAI,CAACe,SAAU,EAPkF;AAQ/GC,UAAAA,gBAAgB,EAAG,GAAEhB,IAAI,CAACgB,gBAAiB,EARoE;AAS/GC,UAAAA,qBAAqB,EAAG,GAAEjB,IAAI,CAACiB,qBAAsB;AAT0D,SAAzF,EAUpB;AACFI,UAAAA,OAAO,EAAE;AACRC,YAAAA,aAAa,EAAG,UAASrB,KAAM;AADvB;AADP,SAVoB,CAAvB;;AAeA,YAAImB,QAAQ,CAACpB,IAAT,CAAcM,OAAlB,EAA2B;AAC1BY,UAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACpB,IAArB;AACA,iBAAOoB,QAAQ,CAACpB,IAAhB;AACA,SAHD,MAGO;AACNkB,UAAAA,OAAO,CAACK,KAAR,CAAcH,QAAQ,CAACI,OAAvB;AACA,iBAAOJ,QAAQ,CAACpB,IAAhB;AACA;AACD,OAxBD,CAwBE,OAAOyB,GAAP,EAAY;AACbP,QAAAA,OAAO,CAACK,KAAR,CAAcE,GAAd;AACA,eAAOA,GAAP;AACA;AACD;AACD,GAjDD,CAiDE,OAAOA,GAAP,EAAY;AACbP,IAAAA,OAAO,CAACK,KAAR,CAAcE,GAAd;AACA,WAAOA,GAAP;AACA;AACD","sourcesContent":["import axios from \"axios\"\r\n\r\nexport default async function addResearch(data) {\r\n\ttry {\r\n\t\tlet token = null\r\n\t\tconst tokenRes = await axios.post(\"https://sp-api-test.alun.app/api/token\", {\r\n\t\t\tusername: \"username\",\r\n\t\t\tpassword: \"password\"\r\n\t\t})\r\n\r\n\t\tif(tokenRes.data.success) {\r\n\t\t\ttoken = tokenRes.data.result\r\n\t\t\tlet bod = {\r\n\t\t\t\tresearchName: `${data.researchName}`,\r\n\t\t\t\tgranter: `${data.granter}`,\r\n\t\t\t\tamount: `${data.amount}`,\r\n\t\t\t\tprojectedStart: `${data.projectedStart}`,\r\n\t\t\t\tprojectedEnd: `${data.projectedEnd}`,\r\n\t\t\t\tactualStart: `${data.actualStart}`,\r\n\t\t\t\tactualEnd: `${data.actualEnd}`,\r\n\t\t\t\tresearchProgress: `${data.researchProgress}`,\r\n\t\t\t\tnonFacultyResearchers: `${data.nonFacultyResearchers}`\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\tconsole.log(bod)\r\n\t\t\t\tconst response = await axios.post(\"https://sp-api-test.alun.app/api/faculty/accomplishment/add/research-grant\", {\r\n\t\t\t\t\tresearchName: `${data.researchName}`,\r\n\t\t\t\t\tgranter: `${data.granter}`,\r\n\t\t\t\t\tamount: `${data.amount}`,\r\n\t\t\t\t\tprojectedStart: `${data.projectedStart}`,\r\n\t\t\t\t\tprojectedEnd: `${data.projectedEnd}`,\r\n\t\t\t\t\tactualStart: `${data.actualStart}`,\r\n\t\t\t\t\tactualEnd: `${data.actualEnd}`,\r\n\t\t\t\t\tresearchProgress: `${data.researchProgress}`,\r\n\t\t\t\t\tnonFacultyResearchers: `${data.nonFacultyResearchers}`\r\n\t\t\t\t}, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tif (response.data.success) {\r\n\t\t\t\t\tconsole.log(response.data)\r\n\t\t\t\t\treturn response.data\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(response.message)\r\n\t\t\t\t\treturn response.data\r\n\t\t\t\t}\t\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(err)\r\n\t\t\t\treturn err\r\n\t\t\t}\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.error(err)\r\n\t\treturn err\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}