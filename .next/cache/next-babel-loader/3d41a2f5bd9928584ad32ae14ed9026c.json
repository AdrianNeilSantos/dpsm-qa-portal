{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Aji Maglanque\\\\Desktop\\\\dpsm-qa-portal\\\\components\\\\unit-head\\\\dashboard\\\\dashboard_table.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { useTable, useGroupBy, useExpanded, useSortBy, useFilters, usePagination } from 'react-table'; // default search box filter\n\nfunction DefaultColumnFilter(_ref) {\n  var _ref$column = _ref.column,\n      filterValue = _ref$column.filterValue,\n      preFilteredRows = _ref$column.preFilteredRows,\n      setFilter = _ref$column.setFilter;\n  var count = preFilteredRows.length;\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"form-control col-md-6\",\n    value: filterValue || '',\n    onChange: function onChange(e) {\n      setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n    },\n    placeholder: \"Search \".concat(count, \" records...\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n} // This is a custom filter UI for selecting\n// a unique option from a list\n\n\n_c = DefaultColumnFilter;\n\nfunction SelectColumnFilter(_ref2) {\n  _s();\n\n  var _this = this;\n\n  var _ref2$column = _ref2.column,\n      filterValue = _ref2$column.filterValue,\n      setFilter = _ref2$column.setFilter,\n      preFilteredRows = _ref2$column.preFilteredRows,\n      id = _ref2$column.id;\n  // Calculate the options for filtering\n  // using the preFilteredRows\n  var options = React.useMemo(function () {\n    var options = new Set();\n    preFilteredRows.forEach(function (row) {\n      options.add(row.values[id]);\n    });\n    return _toConsumableArray(options.values());\n  }, [id, preFilteredRows]); // Render a multi-select box\n\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    className: \"form-control col-md-6\",\n    value: filterValue,\n    onChange: function onChange(e) {\n      setFilter(e.target.value || undefined);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), options.map(function (option, i) {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option,\n        children: option\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n} // the table markup\n\n\n_s(SelectColumnFilter, \"UfleS4trXWGxzhzYTKqqYygmjCE=\");\n\n_c2 = SelectColumnFilter;\n\nfunction Table(_ref3) {\n  _s2();\n\n  var _this2 = this;\n\n  var columns = _ref3.columns,\n      data = _ref3.data;\n  var defaultColumn = React.useMemo(function () {\n    return {\n      // Let's set up our default Filter UI\n      Filter: DefaultColumnFilter\n    };\n  }, []);\n\n  var _useTable = useTable({\n    columns: columns,\n    data: data,\n    defaultColumn: defaultColumn,\n    initialState: {\n      pageIndex: 0\n    }\n  }, useFilters, useGroupBy, useSortBy, useExpanded, usePagination),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      footerGroups = _useTable.footerGroups,\n      prepareRow = _useTable.prepareRow,\n      page = _useTable.page,\n      rows = _useTable.rows,\n      canPreviousPage = _useTable.canPreviousPage,\n      canNextPage = _useTable.canNextPage,\n      pageOptions = _useTable.pageOptions,\n      pageCount = _useTable.pageCount,\n      gotoPage = _useTable.gotoPage,\n      nextPage = _useTable.nextPage,\n      previousPage = _useTable.previousPage,\n      setPageSize = _useTable.setPageSize,\n      _useTable$state = _useTable.state,\n      pageIndex = _useTable$state.pageIndex,\n      pageSize = _useTable$state.pageSize,\n      groupBy = _useTable$state.groupBy,\n      expanded = _useTable$state.expanded;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", _objectSpread(_objectSpread({\n      className: \"table table-striped\"\n    }, getTableProps()), {}, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(function (headerGroup) {\n          return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, headerGroup.getHeaderGroupProps()), {}, {\n            children: headerGroup.headers.map(function (column) {\n              return /*#__PURE__*/_jsxDEV(\"th\", _objectSpread(_objectSpread({}, column.getHeaderProps(column.getSortByToggleProps())), {}, {\n                children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: column.isSorted ? column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼' : ' (click to sort)'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 4\n                }, _this2), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: column.canFilter ? column.render('Filter') : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 5\n                }, _this2)]\n              }), void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 16\n              }, _this2);\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 12\n          }, _this2);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", _objectSpread(_objectSpread({}, getTableBodyProps()), {}, {\n        children: page.map(function (row, i) {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, row.getRowProps()), {}, {\n            children: row.cells.map(function (cell) {\n              return /*#__PURE__*/_jsxDEV(\"td\", _objectSpread(_objectSpread({}, cell.getCellProps()), {}, {\n                style: {\n                  background: cell.isGrouped ? '#0aff0082' : cell.isAggregated ? '#ffa50078' : cell.isPlaceholder ? '#ff000042' : 'white'\n                },\n                children: cell.isGrouped ?\n                /*#__PURE__*/\n                // If it's a grouped cell, add an expander and row count\n                _jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", _objectSpread(_objectSpread({}, row.getToggleRowExpandedProps()), {}, {\n                    children: row.isExpanded ? 'ðŸ‘‡' : 'ðŸ‘‰'\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 27\n                  }, _this2), ' ', cell.render('Cell'), \" (\", row.subRows.length, \")\"]\n                }, void 0, true) : cell.isAggregated ? // If the cell is aggregated, use the Aggregated\n                // renderer for cell\n                cell.render('Aggregated') : cell.isPlaceholder ? null : // For cells with repeated values, render null\n                // Otherwise, just render the regular cell\n                cell.render('Cell')\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 21\n              }, _this2);\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, _this2);\n        })\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n        children: footerGroups.map(function (group) {\n          return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, group.getFooterGroupProps()), {}, {\n            children: group.headers.map(function (column) {\n              return /*#__PURE__*/_jsxDEV(\"td\", _objectSpread(_objectSpread({}, column.getFooterProps()), {}, {\n                children: [column.canGroupBy ?\n                /*#__PURE__*/\n                // If the column can be grouped, let's add a toggle\n                _jsxDEV(\"span\", _objectSpread(_objectSpread({}, column.getGroupByToggleProps()), {}, {\n                  children: column.isGrouped ? 'Click to Ungroup ' : 'Click to Group'\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 21\n                }, _this2) : null, column.render('Footer')]\n              }), void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 15\n              }, _this2);\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 11\n          }, _this2);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 2\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return gotoPage(0);\n        },\n        disabled: !canPreviousPage,\n        children: '<<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return previousPage();\n        },\n        disabled: !canPreviousPage,\n        children: '<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return nextPage();\n        },\n        disabled: !canNextPage,\n        children: '>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return gotoPage(pageCount - 1);\n        },\n        disabled: !canNextPage,\n        children: '>>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [pageIndex + 1, \" of \", pageOptions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"| Go to page:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          defaultValue: pageIndex + 1,\n          onChange: function onChange(e) {\n            var page = e.target.value ? Number(e.target.value) - 1 : 0;\n            gotoPage(page);\n          },\n          style: {\n            width: '100px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"select\", {\n        value: pageSize,\n        onChange: function onChange(e) {\n          setPageSize(Number(e.target.value));\n        },\n        children: [10, 20, 30, 40, 50].map(function (pageSize) {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: pageSize,\n            children: [\"Show \", pageSize]\n          }, pageSize, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, _this2);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 1\n  }, this);\n} // configure columns, populate cells, render table\n\n\n_s2(Table, \"1PPgrgrHy2wPtu5Jcla5zGEcw84=\", false, function () {\n  return [useTable];\n});\n\n_c3 = Table;\n\nfunction AnalyticsTable() {\n  _s3();\n\n  var data = React.useMemo(function () {\n    return [{\n      col1: 'Cena, John',\n      col2: 'PhD'\n    }, {\n      col1: 'Stark, Anthony',\n      col2: 'MS'\n    }, {\n      col1: 'Nelson, Kent',\n      col2: 'BA'\n    }, {\n      col1: 'Parker, Peter',\n      col2: 'PhD'\n    }, {\n      col1: 'Omega, Kenny',\n      col2: 'BS'\n    }, {\n      col1: 'Wilson, Sam',\n      col2: 'MS'\n    }, {\n      col1: 'Naito, Tetsuya',\n      col2: 'BA'\n    }, {\n      col1: 'Sakurai, Masahiro',\n      col2: 'BS'\n    }, {\n      col1: 'Reyes, Jaime',\n      col2: 'BS'\n    }, {\n      col1: 'Steve',\n      col2: 'MS'\n    }, {\n      col1: 'Hedgehog, Sonic the',\n      col2: 'PhD'\n    }, {\n      col1: 'Odinsdottir, Angela',\n      col2: 'BA'\n    }];\n  }, []);\n  var columns = React.useMemo(function () {\n    return [{\n      Header: 'Name',\n      Footer: '',\n      accessor: 'col1',\n      // accessor is the \"key\" in the data,\n      aggregate: 'count',\n      Aggregated: function Aggregated(_ref4) {\n        var value = _ref4.value;\n        return \"\".concat(value, \" Names\");\n      },\n      Filter: DefaultColumnFilter\n    }, {\n      Header: 'Degree',\n      Footer: '',\n      accessor: 'col2',\n      aggregate: 'count',\n      Aggregated: function Aggregated(_ref5) {\n        var value = _ref5.value;\n        return \"\".concat(value, \" Names\");\n      },\n      Filter: SelectColumnFilter\n    }];\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Table, {\n    columns: columns,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 6\n  }, this);\n}\n\n_s3(AnalyticsTable, \"KHoHFC1MXL0JSWRk3ATtEB14X9c=\");\n\n_c4 = AnalyticsTable;\nexport default AnalyticsTable;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"DefaultColumnFilter\");\n$RefreshReg$(_c2, \"SelectColumnFilter\");\n$RefreshReg$(_c3, \"Table\");\n$RefreshReg$(_c4, \"AnalyticsTable\");","map":{"version":3,"sources":["C:/Users/Aji Maglanque/Desktop/dpsm-qa-portal/components/unit-head/dashboard/dashboard_table.js"],"names":["React","useTable","useGroupBy","useExpanded","useSortBy","useFilters","usePagination","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","length","e","target","value","undefined","SelectColumnFilter","id","options","useMemo","Set","forEach","row","add","values","map","option","i","Table","columns","data","defaultColumn","Filter","initialState","pageIndex","getTableProps","getTableBodyProps","headerGroups","footerGroups","prepareRow","page","rows","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageSize","groupBy","expanded","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","canFilter","getRowProps","cells","cell","getCellProps","background","isGrouped","isAggregated","isPlaceholder","getToggleRowExpandedProps","isExpanded","subRows","group","getFooterGroupProps","getFooterProps","canGroupBy","getGroupByToggleProps","Number","width","AnalyticsTable","col1","col2","Header","Footer","accessor","aggregate","Aggregated"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useTable, useGroupBy, useExpanded, useSortBy, useFilters, usePagination } from 'react-table'\r\n\r\n// default search box filter\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length\r\n\r\n  return (\r\n    <input className = \"form-control col-md-6\"\r\n      value={filterValue || ''}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Search ${count} records...`}\r\n    />\r\n  )\r\n}\r\n\r\n// This is a custom filter UI for selecting\r\n// a unique option from a list\r\nfunction SelectColumnFilter({\r\n  column: { filterValue, setFilter, preFilteredRows, id },\r\n}) {\r\n  // Calculate the options for filtering\r\n  // using the preFilteredRows\r\n  const options = React.useMemo(() => {\r\n    const options = new Set()\r\n    preFilteredRows.forEach(row => {\r\n      options.add(row.values[id])\r\n    })\r\n    return [...options.values()]\r\n  }, [id, preFilteredRows])\r\n\r\n  // Render a multi-select box\r\n  return (\r\n    <select className = \"form-control col-md-6\"\r\n      value={filterValue}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined)\r\n      }}\r\n    >\r\n      <option value=\"\">All</option>\r\n      {options.map((option, i) => (\r\n        <option key={i} value={option}>\r\n          {option}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  )\r\n}\r\n\r\n// the table markup\r\nfunction Table ({columns, data}){\r\n const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  )\r\n\r\n   const {\r\n     getTableProps,\r\n     getTableBodyProps,\r\n     headerGroups,\r\n     footerGroups,\r\n     prepareRow,\r\n     page,\r\n     rows, \r\n\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize, groupBy, expanded },\r\n   } = useTable({ columns, data, defaultColumn, initialState: { pageIndex: 0 } }, useFilters, useGroupBy, useSortBy, useExpanded, usePagination)\r\n\r\n return(\r\n<div>\r\n   <table className = \"table table-striped\" {...getTableProps()}>\r\n       <thead>\r\n         {headerGroups.map(headerGroup => (\r\n           <tr {...headerGroup.getHeaderGroupProps()}>\r\n             {headerGroup.headers.map(column => (\r\n               <th\r\n\t\t// sorting function\r\n                 {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                 >\r\n                 {column.render('Header')}\r\n\t\t <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? ' ðŸ”½'\r\n                        : ' ðŸ”¼'\r\n                      : ' (click to sort)'}\r\n                  </span>\r\n\t\t  <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n               </th>\r\n             ))}\r\n           </tr>\r\n         ))}\r\n       </thead>\r\n       <tbody {...getTableBodyProps()}>\r\n         {page.map((row, i) => {\r\n            prepareRow(row)\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return (\r\n                    <td\r\n                      // For educational purposes, let's color the\r\n                      // cell depending on what type it is given\r\n                      // from the useGroupBy hook\r\n                      {...cell.getCellProps()}\r\n                      style={{\r\n                        background: cell.isGrouped\r\n                          ? '#0aff0082'\r\n                          : cell.isAggregated\r\n                          ? '#ffa50078'\r\n                          : cell.isPlaceholder\r\n                          ? '#ff000042'\r\n                          : 'white',\r\n                      }}\r\n                    >\r\n                      {cell.isGrouped ? (\r\n                        // If it's a grouped cell, add an expander and row count\r\n                        <>\r\n                          <span {...row.getToggleRowExpandedProps()}>\r\n                            {row.isExpanded ? 'ðŸ‘‡' : 'ðŸ‘‰'}\r\n                          </span>{' '}\r\n                          {cell.render('Cell')} ({row.subRows.length})\r\n                        </>\r\n                      ) : cell.isAggregated ? (\r\n                        // If the cell is aggregated, use the Aggregated\r\n                        // renderer for cell\r\n                        cell.render('Aggregated')\r\n                      ) : cell.isPlaceholder ? null : ( // For cells with repeated values, render null\r\n                        // Otherwise, just render the regular cell\r\n                        cell.render('Cell')\r\n                      )}\r\n                    </td>\r\n                  )\r\n                })}\r\n              </tr>\r\n            )\r\n          })}\r\n       </tbody>\r\n\t<tfoot>\r\n        {footerGroups.map(group => (\r\n          <tr {...group.getFooterGroupProps()}>\r\n            {group.headers.map(column => (\r\n              <td \r\n\t\t{...column.getFooterProps()}>\r\n\t\t{column.canGroupBy ? (\r\n                    // If the column can be grouped, let's add a toggle\r\n                    <span {...column.getGroupByToggleProps()}>\r\n                      {column.isGrouped ? 'Click to Ungroup ' : 'Click to Group'}\r\n                    </span>\r\n                  ) : null}\r\n\t\t\r\n\t\t{column.render('Footer')}\r\n\t      </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tfoot>\r\n     </table>\r\n\r\n\t\r\n     <div className=\"pagination\">\r\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {'<<'}\r\n        </button>{' '}\r\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          {'<'}\r\n        </button>{' '}\r\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {'>'}\r\n        </button>{' '}\r\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {'>>'}\r\n        </button>{' '}\r\n        <span>\r\n          Page{' '}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n        <span>\r\n          | Go to page:{' '}\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={e => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n              gotoPage(page)\r\n            }}\r\n            style={{ width: '100px' }}\r\n          />\r\n        </span>{' '}\r\n        <select\r\n          value={pageSize}\r\n          onChange={e => {\r\n            setPageSize(Number(e.target.value))\r\n          }}\r\n        >\r\n          {[10, 20, 30, 40, 50].map(pageSize => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Show {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n</div>\r\n )\r\n  \r\n}\r\n \r\n\r\n// configure columns, populate cells, render table\r\n function AnalyticsTable() {\r\n   const data = React.useMemo(\r\n     () => [\r\n       {\r\n         col1: 'Cena, John',\r\n         col2: 'PhD',\r\n       },\r\n       {\r\n         col1: 'Stark, Anthony',\r\n         col2: 'MS',\r\n       },\r\n       {\r\n         col1: 'Nelson, Kent',\r\n         col2: 'BA',\r\n       },\r\n       {\r\n         col1: 'Parker, Peter',\r\n         col2: 'PhD',\r\n       },\r\n       {\r\n         col1: 'Omega, Kenny',\r\n         col2: 'BS',\r\n       },\r\n       {\r\n         col1: 'Wilson, Sam',\r\n         col2: 'MS',\r\n       },\r\n       {\r\n         col1: 'Naito, Tetsuya',\r\n         col2: 'BA',\r\n       },\r\n       {\r\n         col1: 'Sakurai, Masahiro',\r\n         col2: 'BS',\r\n       },\r\n       {\r\n         col1: 'Reyes, Jaime',\r\n         col2: 'BS',\r\n       },\r\n       {\r\n         col1: 'Steve',\r\n         col2: 'MS',\r\n       },\r\n       {\r\n         col1: 'Hedgehog, Sonic the',\r\n         col2: 'PhD',\r\n       },\r\n       {\r\n         col1: 'Odinsdottir, Angela',\r\n         col2: 'BA',\r\n       }\r\n     ],\r\n     []\r\n   )\r\n \r\n   const columns = React.useMemo(\r\n     () => [\r\n       {\r\n         Header: 'Name',\r\n\t Footer: '',\r\n         accessor: 'col1', // accessor is the \"key\" in the data,\r\n\t aggregate: 'count',\r\n         Aggregated: ({ value }) => `${value} Names`,\r\n\t Filter: DefaultColumnFilter\r\n       },\r\n       {\r\n         Header: 'Degree',\r\n\t Footer: '',\r\n         accessor: 'col2',\r\n\t aggregate: 'count',\r\n         Aggregated: ({ value }) => `${value} Names`,\r\n\t Filter: SelectColumnFilter\r\n       },\r\n     ],\r\n     []\r\n   )\r\n \r\n   return (\r\n     <Table columns={columns} data={data} /> \r\n   )\r\n }\r\n\r\nexport default AnalyticsTable\r\n"]},"metadata":{},"sourceType":"module"}