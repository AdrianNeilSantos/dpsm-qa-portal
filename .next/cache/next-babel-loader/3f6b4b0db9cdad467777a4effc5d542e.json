{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nexport default function addWorkExp(_x) {\n  return _addWorkExp.apply(this, arguments);\n}\n\nfunction _addWorkExp() {\n  _addWorkExp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n    var token, tokenRes, bod, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            token = null;\n            _context.next = 4;\n            return axios.post(\"https://sp-api-test.alun.app/api/login\", {\n              upemail: \"username\",\n              password: \"password\"\n            });\n\n          case 4:\n            tokenRes = _context.sent;\n            console.log(tokenRes);\n\n            if (!tokenRes.data.success) {\n              _context.next = 28;\n              break;\n            }\n\n            token = tokenRes.data.result.token;\n            bod = null;\n\n            if (\"\".concat(data.endDate) == \"\") {\n              bod = {\n                facultyId: \"9\",\n                employerName: \"\".concat(data.employerName),\n                position: \"\".concat(data.position),\n                startDate: \"\".concat(data.startDate),\n                description: \"\".concat(data.description)\n              };\n            } else {\n              bod = {\n                facultyId: \"9\",\n                employerName: \"\".concat(data.employerName),\n                position: \"\".concat(data.position),\n                startDate: \"\".concat(data.startDate),\n                endDate: \"\".concat(data.endDate),\n                description: \"\".concat(data.description)\n              };\n            }\n\n            console.log(bod);\n            _context.prev = 11;\n            _context.next = 14;\n            return axios.post(\"https://sp-api-test.alun.app/api/faculty/basic-info/add/work-exp\", bod, {\n              headers: {\n                Authorization: \"Bearer \".concat(token)\n              }\n            });\n\n          case 14:\n            response = _context.sent;\n\n            if (!response.data.success) {\n              _context.next = 20;\n              break;\n            }\n\n            console.log(response.data);\n            return _context.abrupt(\"return\", response.data);\n\n          case 20:\n            console.error(response.message);\n            return _context.abrupt(\"return\", response.data);\n\n          case 22:\n            _context.next = 28;\n            break;\n\n          case 24:\n            _context.prev = 24;\n            _context.t0 = _context[\"catch\"](11);\n            console.error(_context.t0);\n            return _context.abrupt(\"return\", _context.t0);\n\n          case 28:\n            _context.next = 34;\n            break;\n\n          case 30:\n            _context.prev = 30;\n            _context.t1 = _context[\"catch\"](0);\n            console.error(_context.t1);\n            return _context.abrupt(\"return\", _context.t1);\n\n          case 34:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 30], [11, 24]]);\n  }));\n  return _addWorkExp.apply(this, arguments);\n}","map":{"version":3,"sources":["C:/Users/Aji Maglanque/Desktop/dpsm-qa-portal/services/faculty/basic-info/addWorkExp.js"],"names":["axios","addWorkExp","data","token","post","upemail","password","tokenRes","console","log","success","result","bod","endDate","facultyId","employerName","position","startDate","description","headers","Authorization","response","error","message"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,wBAA8BC,UAA9B;AAAA;AAAA;;;yEAAe,iBAA0BC,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAETC,YAAAA,KAFS,GAED,IAFC;AAAA;AAAA,mBAGUH,KAAK,CAACI,IAAN,CAAW,wCAAX,EAAqD;AAC3EC,cAAAA,OAAO,EAAE,UADkE;AAE3EC,cAAAA,QAAQ,EAAE;AAFiE,aAArD,CAHV;;AAAA;AAGPC,YAAAA,QAHO;AAQbC,YAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AARa,iBAUVA,QAAQ,CAACL,IAAT,CAAcQ,OAVJ;AAAA;AAAA;AAAA;;AAWZP,YAAAA,KAAK,GAAGI,QAAQ,CAACL,IAAT,CAAcS,MAAd,CAAqBR,KAA7B;AACIS,YAAAA,GAZQ,GAYF,IAZE;;AAaZ,gBAAG,UAAGV,IAAI,CAACW,OAAR,KAAqB,EAAxB,EAA4B;AAC3BD,cAAAA,GAAG,GAAG;AACLE,gBAAAA,SAAS,EAAE,GADN;AAELC,gBAAAA,YAAY,YAAKb,IAAI,CAACa,YAAV,CAFP;AAGLC,gBAAAA,QAAQ,YAAKd,IAAI,CAACc,QAAV,CAHH;AAILC,gBAAAA,SAAS,YAAKf,IAAI,CAACe,SAAV,CAJJ;AAKLC,gBAAAA,WAAW,YAAKhB,IAAI,CAACgB,WAAV;AALN,eAAN;AAOA,aARD,MAQO;AACNN,cAAAA,GAAG,GAAG;AACLE,gBAAAA,SAAS,EAAE,GADN;AAELC,gBAAAA,YAAY,YAAKb,IAAI,CAACa,YAAV,CAFP;AAGLC,gBAAAA,QAAQ,YAAKd,IAAI,CAACc,QAAV,CAHH;AAILC,gBAAAA,SAAS,YAAKf,IAAI,CAACe,SAAV,CAJJ;AAKLJ,gBAAAA,OAAO,YAAKX,IAAI,CAACW,OAAV,CALF;AAMLK,gBAAAA,WAAW,YAAKhB,IAAI,CAACgB,WAAV;AANN,eAAN;AAQA;;AACDV,YAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AA/BY;AAAA;AAAA,mBAiCYZ,KAAK,CAACI,IAAN,CAAW,kEAAX,EAA+EQ,GAA/E,EAAoF;AAC1GO,cAAAA,OAAO,EAAE;AACRC,gBAAAA,aAAa,mBAAYjB,KAAZ;AADL;AADiG,aAApF,CAjCZ;;AAAA;AAiCLkB,YAAAA,QAjCK;;AAAA,iBAsCPA,QAAQ,CAACnB,IAAT,CAAcQ,OAtCP;AAAA;AAAA;AAAA;;AAuCVF,YAAAA,OAAO,CAACC,GAAR,CAAYY,QAAQ,CAACnB,IAArB;AAvCU,6CAwCHmB,QAAQ,CAACnB,IAxCN;;AAAA;AA0CVM,YAAAA,OAAO,CAACc,KAAR,CAAcD,QAAQ,CAACE,OAAvB;AA1CU,6CA2CHF,QAAQ,CAACnB,IA3CN;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA8CXM,YAAAA,OAAO,CAACc,KAAR;AA9CW;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAmDbd,YAAAA,OAAO,CAACc,KAAR;AAnDa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import axios from \"axios\"\r\n\r\nexport default async function addWorkExp(data) {\r\n\ttry {\r\n\t\tlet token = null\r\n\t\tconst tokenRes = await axios.post(\"https://sp-api-test.alun.app/api/login\", {\r\n\t\t\tupemail: \"username\",\r\n\t\t\tpassword: \"password\"\r\n\t\t})\r\n\r\n\t\tconsole.log(tokenRes)\r\n\r\n\t\tif(tokenRes.data.success) {\r\n\t\t\ttoken = tokenRes.data.result.token\r\n\t\t\tlet bod = null\r\n\t\t\tif(`${data.endDate}` == \"\") {\r\n\t\t\t\tbod = {\r\n\t\t\t\t\tfacultyId: \"9\",\r\n\t\t\t\t\temployerName: `${data.employerName}`,\r\n\t\t\t\t\tposition: `${data.position}`,\r\n\t\t\t\t\tstartDate: `${data.startDate}`,\r\n\t\t\t\t\tdescription: `${data.description}`\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tbod = {\r\n\t\t\t\t\tfacultyId: \"9\",\r\n\t\t\t\t\temployerName: `${data.employerName}`,\r\n\t\t\t\t\tposition: `${data.position}`,\r\n\t\t\t\t\tstartDate: `${data.startDate}`,\r\n\t\t\t\t\tendDate: `${data.endDate}`,\r\n\t\t\t\t\tdescription: `${data.description}`\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconsole.log(bod)\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axios.post(\"https://sp-api-test.alun.app/api/faculty/basic-info/add/work-exp\", bod, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tif (response.data.success) {\r\n\t\t\t\t\tconsole.log(response.data)\r\n\t\t\t\t\treturn response.data\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(response.message)\r\n\t\t\t\t\treturn response.data\r\n\t\t\t\t}\t\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(err)\r\n\t\t\t\treturn err\r\n\t\t\t}\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.error(err)\r\n\t\treturn err\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}