{"ast":null,"code":"import axios from \"axios\";\nexport default async function addPublication(data) {\n  try {\n    let token = null;\n    const tokenRes = await axios.post(\"https://sp-api-test.alun.app/api/login\", {\n      upemail: \"username\",\n      password: \"password\"\n    });\n\n    if (tokenRes.data.success) {\n      token = tokenRes.data.result.token;\n      let bod = {\n        title: `${data.title}`,\n        journal: `${data.journal}`,\n        url: `${data.url}`,\n        publicationDate: `${data.publicationDate}`,\n        nonFacultyAuthors: `${data.nonFacultyAuthors}`\n      };\n      console.log(bod);\n\n      try {\n        const response = await axios.post(\"https://sp-api-test.alun.app/api/faculty/accomplishment/add/publication\", {\n          title: `${data.title}`,\n          journal: `${data.journal}`,\n          url: `${data.url}`,\n          publicationDate: `${data.publicationDate}`,\n          nonFacultyAuthors: `${data.nonFacultyAuthors}`\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        if (response.data.success) {\n          // console.log(response.data)\n          try {\n            const pub = await axios.post(\"https://sp-api-test.alun.app/api/faculty/accomplishment/add/publisher\", {\n              facultyId: 9,\n              publicationId: response.data.result.publicationId,\n              status: \"Pending\"\n            }, {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n\n            if (pub.data.success) {\n              return pub.data;\n            } else {\n              console.error(pub.message);\n              return pub.data;\n            }\n          } catch (err) {\n            console.error(err);\n            return err;\n          }\n        } else {\n          console.error(response.message);\n          return response.data;\n        }\n      } catch (err) {\n        console.error(err);\n        return err;\n      }\n    }\n  } catch (err) {\n    console.error(err);\n    return err;\n  }\n}","map":{"version":3,"sources":["C:/Users/Aji Maglanque/Desktop/dpsm-qa-portal/services/faculty/accomplishments/addPublication.js"],"names":["axios","addPublication","data","token","tokenRes","post","upemail","password","success","result","bod","title","journal","url","publicationDate","nonFacultyAuthors","console","log","response","headers","Authorization","pub","facultyId","publicationId","status","error","message","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,eAAeC,cAAf,CAA8BC,IAA9B,EAAoC;AAClD,MAAI;AACH,QAAIC,KAAK,GAAG,IAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAN,CAAW,wCAAX,EAAqD;AAC3EC,MAAAA,OAAO,EAAE,UADkE;AAE3EC,MAAAA,QAAQ,EAAE;AAFiE,KAArD,CAAvB;;AAKA,QAAGH,QAAQ,CAACF,IAAT,CAAcM,OAAjB,EAA0B;AACzBL,MAAAA,KAAK,GAAGC,QAAQ,CAACF,IAAT,CAAcO,MAAd,CAAqBN,KAA7B;AACA,UAAIO,GAAG,GAAG;AACTC,QAAAA,KAAK,EAAG,GAAET,IAAI,CAACS,KAAM,EADZ;AAETC,QAAAA,OAAO,EAAG,GAAEV,IAAI,CAACU,OAAQ,EAFhB;AAGTC,QAAAA,GAAG,EAAG,GAAEX,IAAI,CAACW,GAAI,EAHR;AAITC,QAAAA,eAAe,EAAE,GAAEZ,IAAI,CAACY,eAAgB,EAJ/B;AAKTC,QAAAA,iBAAiB,EAAG,GAAEb,IAAI,CAACa,iBAAkB;AALpC,OAAV;AAOAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;;AACA,UAAI;AACH,cAAMQ,QAAQ,GAAG,MAAMlB,KAAK,CAACK,IAAN,CAAW,yEAAX,EAAsF;AAC5GM,UAAAA,KAAK,EAAG,GAAET,IAAI,CAACS,KAAM,EADuF;AAE5GC,UAAAA,OAAO,EAAG,GAAEV,IAAI,CAACU,OAAQ,EAFmF;AAG5GC,UAAAA,GAAG,EAAG,GAAEX,IAAI,CAACW,GAAI,EAH2F;AAI5GC,UAAAA,eAAe,EAAE,GAAEZ,IAAI,CAACY,eAAgB,EAJoE;AAK5GC,UAAAA,iBAAiB,EAAG,GAAEb,IAAI,CAACa,iBAAkB;AAL+D,SAAtF,EAMpB;AACFI,UAAAA,OAAO,EAAE;AACRC,YAAAA,aAAa,EAAG,UAASjB,KAAM;AADvB;AADP,SANoB,CAAvB;;AAWA,YAAIe,QAAQ,CAAChB,IAAT,CAAcM,OAAlB,EAA2B;AAC1B;AACA,cAAI;AACH,kBAAMa,GAAG,GAAG,MAAMrB,KAAK,CAACK,IAAN,CAAW,uEAAX,EAAoF;AACrGiB,cAAAA,SAAS,EAAE,CAD0F;AAErGC,cAAAA,aAAa,EAAEL,QAAQ,CAAChB,IAAT,CAAcO,MAAd,CAAqBc,aAFiE;AAGrGC,cAAAA,MAAM,EAAE;AAH6F,aAApF,EAIf;AACFL,cAAAA,OAAO,EAAE;AACRC,gBAAAA,aAAa,EAAG,UAASjB,KAAM;AADvB;AADP,aAJe,CAAlB;;AASA,gBAAIkB,GAAG,CAACnB,IAAJ,CAASM,OAAb,EAAsB;AACrB,qBAAOa,GAAG,CAACnB,IAAX;AACA,aAFD,MAEO;AACNc,cAAAA,OAAO,CAACS,KAAR,CAAcJ,GAAG,CAACK,OAAlB;AACA,qBAAOL,GAAG,CAACnB,IAAX;AACA;AACD,WAhBD,CAgBE,OAAOyB,GAAP,EAAY;AACbX,YAAAA,OAAO,CAACS,KAAR,CAAcE,GAAd;AACA,mBAAOA,GAAP;AACA;AACD,SAtBD,MAsBO;AACNX,UAAAA,OAAO,CAACS,KAAR,CAAcP,QAAQ,CAACQ,OAAvB;AACA,iBAAOR,QAAQ,CAAChB,IAAhB;AACA;AACD,OAtCD,CAsCE,OAAOyB,GAAP,EAAY;AACbX,QAAAA,OAAO,CAACS,KAAR,CAAcE,GAAd;AACA,eAAOA,GAAP;AACA;AACD;AACD,GA5DD,CA4DE,OAAOA,GAAP,EAAY;AACbX,IAAAA,OAAO,CAACS,KAAR,CAAcE,GAAd;AACA,WAAOA,GAAP;AACA;AACD","sourcesContent":["import axios from \"axios\"\r\n\r\nexport default async function addPublication(data) {\r\n\ttry {\r\n\t\tlet token = null\r\n\t\tconst tokenRes = await axios.post(\"https://sp-api-test.alun.app/api/login\", {\r\n\t\t\tupemail: \"username\",\r\n\t\t\tpassword: \"password\"\r\n\t\t})\r\n\r\n\t\tif(tokenRes.data.success) {\r\n\t\t\ttoken = tokenRes.data.result.token\r\n\t\t\tlet bod = {\r\n\t\t\t\ttitle: `${data.title}`,\r\n\t\t\t\tjournal: `${data.journal}`,\r\n\t\t\t\turl: `${data.url}`,\r\n\t\t\t\tpublicationDate:`${data.publicationDate}`,\r\n\t\t\t\tnonFacultyAuthors: `${data.nonFacultyAuthors}`\r\n\t\t\t}\r\n\t\t\tconsole.log(bod)\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axios.post(\"https://sp-api-test.alun.app/api/faculty/accomplishment/add/publication\", {\r\n\t\t\t\t\ttitle: `${data.title}`,\r\n\t\t\t\t\tjournal: `${data.journal}`,\r\n\t\t\t\t\turl: `${data.url}`,\r\n\t\t\t\t\tpublicationDate:`${data.publicationDate}`,\r\n\t\t\t\t\tnonFacultyAuthors: `${data.nonFacultyAuthors}`\r\n\t\t\t\t}, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tif (response.data.success) {\r\n\t\t\t\t\t// console.log(response.data)\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tconst pub = await axios.post(\"https://sp-api-test.alun.app/api/faculty/accomplishment/add/publisher\", {\r\n\t\t\t\t\t\t\tfacultyId: 9,\r\n\t\t\t\t\t\t\tpublicationId: response.data.result.publicationId,\r\n\t\t\t\t\t\t\tstatus: \"Pending\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tif (pub.data.success) {\r\n\t\t\t\t\t\t\treturn pub.data\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconsole.error(pub.message)\r\n\t\t\t\t\t\t\treturn pub.data\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tconsole.error(err)\r\n\t\t\t\t\t\treturn err\r\n\t\t\t\t\t}\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(response.message)\r\n\t\t\t\t\treturn response.data\r\n\t\t\t\t}\t\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(err)\r\n\t\t\t\treturn err\r\n\t\t\t}\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.error(err)\r\n\t\treturn err\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}