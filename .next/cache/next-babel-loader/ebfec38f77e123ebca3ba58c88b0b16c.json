{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nexport default function addLicensure(_x) {\n  return _addLicensure.apply(this, arguments);\n}\n\nfunction _addLicensure() {\n  _addLicensure = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n    var token, tokenRes, bod, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            token = null;\n            _context.next = 4;\n            return axios.post(\"https://sp-api-test.alun.app/api/token\", {\n              username: \"username\",\n              password: \"password\"\n            });\n\n          case 4:\n            tokenRes = _context.sent;\n\n            if (!tokenRes.data.success) {\n              _context.next = 26;\n              break;\n            }\n\n            token = tokenRes.data.result;\n            bod = {\n              examName: \"\".concat(data.title),\n              examDate: \"\".concat(data.title),\n              licenseNumber: \"\".concat(data.title),\n              rank: \"\".concat(data.title),\n              proof: \"\".concat(data.title)\n            };\n            _context.prev = 8;\n            console.log(bod);\n            _context.next = 12;\n            return axios.post(\"https://sp-api-test.alun.app/api/faculty/accomplishment/add/licensure-exam\", {\n              facultyId: \"9\",\n              examName: \"\".concat(data.examName),\n              examDate: \"\".concat(data.examDate),\n              licenseNumber: \"\".concat(data.licenseNumber),\n              rank: \"\".concat(data.rank),\n              proof: \"\".concat(data.proof)\n            }, {\n              headers: {\n                Authorization: \"Bearer \".concat(token)\n              }\n            });\n\n          case 12:\n            response = _context.sent;\n\n            if (!response.data.success) {\n              _context.next = 18;\n              break;\n            }\n\n            console.log(response.data);\n            return _context.abrupt(\"return\", response.data);\n\n          case 18:\n            console.error(response.message);\n            return _context.abrupt(\"return\", response.data);\n\n          case 20:\n            _context.next = 26;\n            break;\n\n          case 22:\n            _context.prev = 22;\n            _context.t0 = _context[\"catch\"](8);\n            console.error(_context.t0);\n            return _context.abrupt(\"return\", _context.t0);\n\n          case 26:\n            _context.next = 32;\n            break;\n\n          case 28:\n            _context.prev = 28;\n            _context.t1 = _context[\"catch\"](0);\n            console.error(_context.t1);\n            return _context.abrupt(\"return\", _context.t1);\n\n          case 32:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 28], [8, 22]]);\n  }));\n  return _addLicensure.apply(this, arguments);\n}","map":{"version":3,"sources":["C:/Users/Aji Maglanque/Desktop/dpsm-qa-portal/services/faculty/accomplishments/addLicensure.js"],"names":["axios","addLicensure","data","token","post","username","password","tokenRes","success","result","bod","examName","title","examDate","licenseNumber","rank","proof","console","log","facultyId","headers","Authorization","response","error","message"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,wBAA8BC,YAA9B;AAAA;AAAA;;;2EAAe,iBAA4BC,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAETC,YAAAA,KAFS,GAED,IAFC;AAAA;AAAA,mBAGUH,KAAK,CAACI,IAAN,CAAW,wCAAX,EAAqD;AAC3EC,cAAAA,QAAQ,EAAE,UADiE;AAE3EC,cAAAA,QAAQ,EAAE;AAFiE,aAArD,CAHV;;AAAA;AAGPC,YAAAA,QAHO;;AAAA,iBAQVA,QAAQ,CAACL,IAAT,CAAcM,OARJ;AAAA;AAAA;AAAA;;AASZL,YAAAA,KAAK,GAAGI,QAAQ,CAACL,IAAT,CAAcO,MAAtB;AACIC,YAAAA,GAVQ,GAUF;AACTC,cAAAA,QAAQ,YAAKT,IAAI,CAACU,KAAV,CADC;AAEAC,cAAAA,QAAQ,YAAKX,IAAI,CAACU,KAAV,CAFR;AAGAE,cAAAA,aAAa,YAAKZ,IAAI,CAACU,KAAV,CAHb;AAIAG,cAAAA,IAAI,YAAKb,IAAI,CAACU,KAAV,CAJJ;AAKAI,cAAAA,KAAK,YAAKd,IAAI,CAACU,KAAV;AALL,aAVE;AAAA;AAkBXK,YAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AAlBW;AAAA,mBAmBYV,KAAK,CAACI,IAAN,CAAW,4EAAX,EAAwF;AAC9Ge,cAAAA,SAAS,EAAE,GADmG;AAE9GR,cAAAA,QAAQ,YAAKT,IAAI,CAACS,QAAV,CAFsG;AAGrGE,cAAAA,QAAQ,YAAKX,IAAI,CAACW,QAAV,CAH6F;AAIrGC,cAAAA,aAAa,YAAKZ,IAAI,CAACY,aAAV,CAJwF;AAKrGC,cAAAA,IAAI,YAAKb,IAAI,CAACa,IAAV,CALiG;AAMrGC,cAAAA,KAAK,YAAKd,IAAI,CAACc,KAAV;AANgG,aAAxF,EAOpB;AACFI,cAAAA,OAAO,EAAE;AACRC,gBAAAA,aAAa,mBAAYlB,KAAZ;AADL;AADP,aAPoB,CAnBZ;;AAAA;AAmBLmB,YAAAA,QAnBK;;AAAA,iBA+BPA,QAAQ,CAACpB,IAAT,CAAcM,OA/BP;AAAA;AAAA;AAAA;;AAgCVS,YAAAA,OAAO,CAACC,GAAR,CAAYI,QAAQ,CAACpB,IAArB;AAhCU,6CAiCHoB,QAAQ,CAACpB,IAjCN;;AAAA;AAmCVe,YAAAA,OAAO,CAACM,KAAR,CAAcD,QAAQ,CAACE,OAAvB;AAnCU,6CAoCHF,QAAQ,CAACpB,IApCN;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAuCXe,YAAAA,OAAO,CAACM,KAAR;AAvCW;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA4CbN,YAAAA,OAAO,CAACM,KAAR;AA5Ca;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import axios from \"axios\"\r\n\r\nexport default async function addLicensure(data) {\r\n\ttry {\r\n\t\tlet token = null\r\n\t\tconst tokenRes = await axios.post(\"https://sp-api-test.alun.app/api/token\", {\r\n\t\t\tusername: \"username\",\r\n\t\t\tpassword: \"password\"\r\n\t\t})\r\n\r\n\t\tif(tokenRes.data.success) {\r\n\t\t\ttoken = tokenRes.data.result\r\n\t\t\tlet bod = {\r\n\t\t\t\texamName: `${data.title}`,\r\n\t            examDate: `${data.title}`,\r\n\t            licenseNumber: `${data.title}`,\r\n\t            rank: `${data.title}`,\r\n\t            proof: `${data.title}`\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\tconsole.log(bod)\r\n\t\t\t\tconst response = await axios.post(\"https://sp-api-test.alun.app/api/faculty/accomplishment/add/licensure-exam\",{\r\n\t\t\t\t\tfacultyId: \"9\",\r\n\t\t\t\t\texamName: `${data.examName}`,\r\n\t\t            examDate: `${data.examDate}`,\r\n\t\t            licenseNumber: `${data.licenseNumber}`,\r\n\t\t            rank: `${data.rank}`,\r\n\t\t            proof: `${data.proof}`\r\n\t\t\t\t}, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tif (response.data.success) {\r\n\t\t\t\t\tconsole.log(response.data)\r\n\t\t\t\t\treturn response.data\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(response.message)\r\n\t\t\t\t\treturn response.data\r\n\t\t\t\t}\t\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(err)\r\n\t\t\t\treturn err\r\n\t\t\t}\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.error(err)\r\n\t\treturn err\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}