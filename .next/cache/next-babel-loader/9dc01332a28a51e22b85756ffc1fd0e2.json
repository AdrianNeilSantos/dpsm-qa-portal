{"ast":null,"code":"import axios from \"axios\";\nexport default async function downloadProof(data) {\n  try {\n    let token = null;\n    const tokenRes = await axios.post(\"https://sp-api-test.alun.app/api/token\", {\n      username: \"username\",\n      password: \"password\"\n    });\n\n    if (tokenRes.data.success) {\n      token = tokenRes.data.result;\n\n      try {\n        // const response = await axios.get(`https://sp-api-test.alun.app/api/download/${data}`, {\n        // \theaders: {\n        // \t\tAuthorization: `Bearer ${token}`\n        // \t}\n        // })\n        // console.log(response)\n        // if (response.data.success) {\n        // \tconsole.log(response.data)\n        // \treturn response.data\n        // } else {\n        // \tconsole.error(response.message)\n        // \treturn response.data\n        // }\t\n        const response = await axios({\n          url: `https://sp-api-test.alun.app/api/download/${data}`,\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          responseType: 'blob'\n        }).then(response => {\n          console.log(response);\n          const url = window.URL.createObjectURL(new Blob([response.data]));\n          const link = document.createElement('a');\n          link.href = url;\n          link.setAttribute('download', `${data}`); //or any other extension\n\n          document.body.appendChild(link);\n          link.click();\n        });\n      } catch (err) {\n        console.error(err);\n        return err;\n      }\n    }\n  } catch (err) {\n    console.error(err);\n    return err;\n  }\n}","map":{"version":3,"sources":["C:/Users/Aji Maglanque/Desktop/dpsm-qa-portal/services/faculty/downloadProof.js"],"names":["axios","downloadProof","data","token","tokenRes","post","username","password","success","result","response","url","method","headers","Authorization","responseType","then","console","log","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","err","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,eAAeC,aAAf,CAA6BC,IAA7B,EAAmC;AACjD,MAAI;AACH,QAAIC,KAAK,GAAG,IAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAN,CAAW,wCAAX,EAAqD;AAC3EC,MAAAA,QAAQ,EAAE,UADiE;AAE3EC,MAAAA,QAAQ,EAAE;AAFiE,KAArD,CAAvB;;AAKA,QAAGH,QAAQ,CAACF,IAAT,CAAcM,OAAjB,EAA0B;AACzBL,MAAAA,KAAK,GAAGC,QAAQ,CAACF,IAAT,CAAcO,MAAtB;;AACA,UAAI;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAMC,QAAQ,GAAG,MAAMV,KAAK,CAAC;AAC5BW,UAAAA,GAAG,EAAG,6CAA4CT,IAAK,EAD3B;AAE5BU,UAAAA,MAAM,EAAE,KAFoB;AAG5BC,UAAAA,OAAO,EAAE;AAAEC,YAAAA,aAAa,EAAG,UAASX,KAAM;AAAjC,WAHmB;AAI5BY,UAAAA,YAAY,EAAE;AAJc,SAAD,CAAL,CAKpBC,IALoB,CAKdN,QAAD,IAAc;AACrBO,UAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACA,gBAAMC,GAAG,GAAGQ,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2B,IAAIC,IAAJ,CAAS,CAACZ,QAAQ,CAACR,IAAV,CAAT,CAA3B,CAAZ;AACA,gBAAMqB,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAb;AACAF,UAAAA,IAAI,CAACG,IAAL,GAAYf,GAAZ;AACAY,UAAAA,IAAI,CAACI,YAAL,CAAkB,UAAlB,EAA+B,GAAEzB,IAAK,EAAtC,EALqB,CAKqB;;AAC1CsB,UAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BN,IAA1B;AACAA,UAAAA,IAAI,CAACO,KAAL;AACA,SAbsB,CAAvB;AAcA,OA5BD,CA4BE,OAAOC,GAAP,EAAY;AACbd,QAAAA,OAAO,CAACe,KAAR,CAAcD,GAAd;AACA,eAAOA,GAAP;AACA;AACD;AACD,GA1CD,CA0CE,OAAOA,GAAP,EAAY;AACbd,IAAAA,OAAO,CAACe,KAAR,CAAcD,GAAd;AACA,WAAOA,GAAP;AACA;AACD","sourcesContent":["import axios from \"axios\"\r\n\r\nexport default async function downloadProof(data) {\r\n\ttry {\r\n\t\tlet token = null\r\n\t\tconst tokenRes = await axios.post(\"https://sp-api-test.alun.app/api/token\", {\r\n\t\t\tusername: \"username\",\r\n\t\t\tpassword: \"password\"\r\n\t\t})\r\n\r\n\t\tif(tokenRes.data.success) {\r\n\t\t\ttoken = tokenRes.data.result\r\n\t\t\ttry {\r\n\t\t\t\t// const response = await axios.get(`https://sp-api-test.alun.app/api/download/${data}`, {\r\n\t\t\t\t// \theaders: {\r\n\t\t\t\t// \t\tAuthorization: `Bearer ${token}`\r\n\t\t\t\t// \t}\r\n\t\t\t\t// })\r\n\t\t\t\t// console.log(response)\r\n\t\t\t\t// if (response.data.success) {\r\n\t\t\t\t// \tconsole.log(response.data)\r\n\t\t\t\t// \treturn response.data\r\n\t\t\t\t// } else {\r\n\t\t\t\t// \tconsole.error(response.message)\r\n\t\t\t\t// \treturn response.data\r\n\t\t\t\t// }\t\r\n\t\t\t\tconst response = await axios({\r\n\t\t\t\t\turl: `https://sp-api-test.alun.app/api/download/${data}`,\r\n\t\t\t\t\tmethod: 'GET',\r\n\t\t\t\t\theaders: { Authorization: `Bearer ${token}` },\r\n\t\t\t\t\tresponseType: 'blob'\r\n\t\t\t\t}).then((response) => {\r\n\t\t\t\t\tconsole.log(response)\r\n\t\t\t\t\tconst url = window.URL.createObjectURL(new Blob([response.data]));\r\n\t\t\t\t\tconst link = document.createElement('a');\r\n\t\t\t\t\tlink.href = url;\r\n\t\t\t\t\tlink.setAttribute('download', `${data}`); //or any other extension\r\n\t\t\t\t\tdocument.body.appendChild(link);\r\n\t\t\t\t\tlink.click();\r\n\t\t\t\t})\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(err)\r\n\t\t\t\treturn err\r\n\t\t\t}\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.error(err)\r\n\t\treturn err\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}